//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Console_ITRON_SAPHIRv2CIE.SceReference_Itron {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOBase", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAbnormalConsumption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOIsolationVoltage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOObjectCreationReturn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPortableTerminal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterStop))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterCheckConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODynamicSummationCriteria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterInSummation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLoadProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLoadProfileConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOChannel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEvent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBillingIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBillingExcess))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOInstantaneousIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOInstantaneous))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOStatusWordIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOStatusWord))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOWaveformIdentifier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOWaveform))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogBook))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualitySummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualitySummaryPhase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualityHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualityTHDDefectHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth))]
    public partial class DTOBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeterIdentifier", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAbnormalConsumption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOIsolationVoltage))]
    public partial class DTOMeterIdentifier : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOAbnormalConsumption", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOAbnormalConsumption : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODetailedAbnormalConsumption[] DetailedAbnormalConsumptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeasuresResponse ResponseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODetailedAbnormalConsumption[] DetailedAbnormalConsumption {
            get {
                return this.DetailedAbnormalConsumptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailedAbnormalConsumptionField, value) != true)) {
                    this.DetailedAbnormalConsumptionField = value;
                    this.RaisePropertyChanged("DetailedAbnormalConsumption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeasuresResponse Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((this.ResponseField.Equals(value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOIsolationVoltage", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOIsolationVoltage : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPhaseIsolationVoltage[] PhaseIsolationVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeasuresResponse ResponseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPhaseIsolationVoltage[] PhaseIsolationVoltage {
            get {
                return this.PhaseIsolationVoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.PhaseIsolationVoltageField, value) != true)) {
                    this.PhaseIsolationVoltageField = value;
                    this.RaisePropertyChanged("PhaseIsolationVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeasuresResponse Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((this.ResponseField.Equals(value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOCustomer", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOCustomer : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOObjectCreationReturn", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOObjectCreationReturn : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewElementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode ReturnCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewElementId {
            get {
                return this.NewElementIdField;
            }
            set {
                if ((this.NewElementIdField.Equals(value) != true)) {
                    this.NewElementIdField = value;
                    this.RaisePropertyChanged("NewElementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode ReturnCode {
            get {
                return this.ReturnCodeField;
            }
            set {
                if ((this.ReturnCodeField.Equals(value) != true)) {
                    this.ReturnCodeField = value;
                    this.RaisePropertyChanged("ReturnCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeter", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeter : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlarmCoverOpeningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlarmCurrentAndVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlarmMagnetSensorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlarmMonitorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AlarmPhaseCutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CheckEnergyAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCity CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConnectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumConnection ConnectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountFirstLoadEOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrentIRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatabaseCreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DaysFirstLoadLPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumDisconnectStatus DisconnectStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DisconnectStatusDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirmwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPSLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPSLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InstallationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IpClientPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IpServerPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisconnectableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMeterModemCLOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPushMeterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasurementDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWorkingMode MeasurementStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterCurrent MeterCurrentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterOrigin MeterOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterOriginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionType MeterProductTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeter MeterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MeterWiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonitorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkDepartureIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NominalFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PasswordLaboratoryTaskDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordWritingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhysicalAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortableTerminalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerNextEstimatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerTheoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProduction ProductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatBeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatCountTry1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatCountTry2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatCountTry3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatCountTry4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatLastErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatLastErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StatLastSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int THDDefectNumberCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int THDDefectNumberVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VoltageQualityDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VoltageURefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float WaveformSamplingPeriodField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARD {
            get {
                return this.ARDField;
            }
            set {
                if ((object.ReferenceEquals(this.ARDField, value) != true)) {
                    this.ARDField = value;
                    this.RaisePropertyChanged("ARD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmCoverOpening {
            get {
                return this.AlarmCoverOpeningField;
            }
            set {
                if ((this.AlarmCoverOpeningField.Equals(value) != true)) {
                    this.AlarmCoverOpeningField = value;
                    this.RaisePropertyChanged("AlarmCoverOpening");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmCurrentAndVoltage {
            get {
                return this.AlarmCurrentAndVoltageField;
            }
            set {
                if ((this.AlarmCurrentAndVoltageField.Equals(value) != true)) {
                    this.AlarmCurrentAndVoltageField = value;
                    this.RaisePropertyChanged("AlarmCurrentAndVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmMagnetSensor {
            get {
                return this.AlarmMagnetSensorField;
            }
            set {
                if ((this.AlarmMagnetSensorField.Equals(value) != true)) {
                    this.AlarmMagnetSensorField = value;
                    this.RaisePropertyChanged("AlarmMagnetSensor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmMonitor {
            get {
                return this.AlarmMonitorField;
            }
            set {
                if ((this.AlarmMonitorField.Equals(value) != true)) {
                    this.AlarmMonitorField = value;
                    this.RaisePropertyChanged("AlarmMonitor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmPhaseCut {
            get {
                return this.AlarmPhaseCutField;
            }
            set {
                if ((this.AlarmPhaseCutField.Equals(value) != true)) {
                    this.AlarmPhaseCutField = value;
                    this.RaisePropertyChanged("AlarmPhaseCut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckConfig {
            get {
                return this.CheckConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckConfigField, value) != true)) {
                    this.CheckConfigField = value;
                    this.RaisePropertyChanged("CheckConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CheckEnergyAlert {
            get {
                return this.CheckEnergyAlertField;
            }
            set {
                if ((this.CheckEnergyAlertField.Equals(value) != true)) {
                    this.CheckEnergyAlertField = value;
                    this.RaisePropertyChanged("CheckEnergyAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCity City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConnectionId {
            get {
                return this.ConnectionIdField;
            }
            set {
                if ((this.ConnectionIdField.Equals(value) != true)) {
                    this.ConnectionIdField = value;
                    this.RaisePropertyChanged("ConnectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumConnection ConnectionType {
            get {
                return this.ConnectionTypeField;
            }
            set {
                if ((this.ConnectionTypeField.Equals(value) != true)) {
                    this.ConnectionTypeField = value;
                    this.RaisePropertyChanged("ConnectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountFirstLoadEOB {
            get {
                return this.CountFirstLoadEOBField;
            }
            set {
                if ((this.CountFirstLoadEOBField.Equals(value) != true)) {
                    this.CountFirstLoadEOBField = value;
                    this.RaisePropertyChanged("CountFirstLoadEOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrentIRef {
            get {
                return this.CurrentIRefField;
            }
            set {
                if ((this.CurrentIRefField.Equals(value) != true)) {
                    this.CurrentIRefField = value;
                    this.RaisePropertyChanged("CurrentIRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DatabaseCreationDate {
            get {
                return this.DatabaseCreationDateField;
            }
            set {
                if ((this.DatabaseCreationDateField.Equals(value) != true)) {
                    this.DatabaseCreationDateField = value;
                    this.RaisePropertyChanged("DatabaseCreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysFirstLoadLP {
            get {
                return this.DaysFirstLoadLPField;
            }
            set {
                if ((this.DaysFirstLoadLPField.Equals(value) != true)) {
                    this.DaysFirstLoadLPField = value;
                    this.RaisePropertyChanged("DaysFirstLoadLP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceAddress {
            get {
                return this.DeviceAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceAddressField, value) != true)) {
                    this.DeviceAddressField = value;
                    this.RaisePropertyChanged("DeviceAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumDisconnectStatus DisconnectStatus {
            get {
                return this.DisconnectStatusField;
            }
            set {
                if ((this.DisconnectStatusField.Equals(value) != true)) {
                    this.DisconnectStatusField = value;
                    this.RaisePropertyChanged("DisconnectStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DisconnectStatusDate {
            get {
                return this.DisconnectStatusDateField;
            }
            set {
                if ((this.DisconnectStatusDateField.Equals(value) != true)) {
                    this.DisconnectStatusDateField = value;
                    this.RaisePropertyChanged("DisconnectStatusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirmwareVersion {
            get {
                return this.FirmwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.FirmwareVersionField, value) != true)) {
                    this.FirmwareVersionField = value;
                    this.RaisePropertyChanged("FirmwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPSLatitude {
            get {
                return this.GPSLatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSLatitudeField, value) != true)) {
                    this.GPSLatitudeField = value;
                    this.RaisePropertyChanged("GPSLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPSLongitude {
            get {
                return this.GPSLongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSLongitudeField, value) != true)) {
                    this.GPSLongitudeField = value;
                    this.RaisePropertyChanged("GPSLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstallationDate {
            get {
                return this.InstallationDateField;
            }
            set {
                if ((this.InstallationDateField.Equals(value) != true)) {
                    this.InstallationDateField = value;
                    this.RaisePropertyChanged("InstallationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IpClientPort {
            get {
                return this.IpClientPortField;
            }
            set {
                if ((this.IpClientPortField.Equals(value) != true)) {
                    this.IpClientPortField = value;
                    this.RaisePropertyChanged("IpClientPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IpServerPort {
            get {
                return this.IpServerPortField;
            }
            set {
                if ((this.IpServerPortField.Equals(value) != true)) {
                    this.IpServerPortField = value;
                    this.RaisePropertyChanged("IpServerPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisconnectable {
            get {
                return this.IsDisconnectableField;
            }
            set {
                if ((this.IsDisconnectableField.Equals(value) != true)) {
                    this.IsDisconnectableField = value;
                    this.RaisePropertyChanged("IsDisconnectable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMeterModemCLO {
            get {
                return this.IsMeterModemCLOField;
            }
            set {
                if ((this.IsMeterModemCLOField.Equals(value) != true)) {
                    this.IsMeterModemCLOField = value;
                    this.RaisePropertyChanged("IsMeterModemCLO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPushMeter {
            get {
                return this.IsPushMeterField;
            }
            set {
                if ((this.IsPushMeterField.Equals(value) != true)) {
                    this.IsPushMeterField = value;
                    this.RaisePropertyChanged("IsPushMeter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasurementDate {
            get {
                return this.MeasurementDateField;
            }
            set {
                if ((this.MeasurementDateField.Equals(value) != true)) {
                    this.MeasurementDateField = value;
                    this.RaisePropertyChanged("MeasurementDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWorkingMode MeasurementStatus {
            get {
                return this.MeasurementStatusField;
            }
            set {
                if ((this.MeasurementStatusField.Equals(value) != true)) {
                    this.MeasurementStatusField = value;
                    this.RaisePropertyChanged("MeasurementStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterCurrent MeterCurrentType {
            get {
                return this.MeterCurrentTypeField;
            }
            set {
                if ((this.MeterCurrentTypeField.Equals(value) != true)) {
                    this.MeterCurrentTypeField = value;
                    this.RaisePropertyChanged("MeterCurrentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterOrigin MeterOrigin {
            get {
                return this.MeterOriginField;
            }
            set {
                if ((this.MeterOriginField.Equals(value) != true)) {
                    this.MeterOriginField = value;
                    this.RaisePropertyChanged("MeterOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterOriginId {
            get {
                return this.MeterOriginIdField;
            }
            set {
                if ((this.MeterOriginIdField.Equals(value) != true)) {
                    this.MeterOriginIdField = value;
                    this.RaisePropertyChanged("MeterOriginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionType MeterProductType {
            get {
                return this.MeterProductTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterProductTypeField, value) != true)) {
                    this.MeterProductTypeField = value;
                    this.RaisePropertyChanged("MeterProductType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeter MeterType {
            get {
                return this.MeterTypeField;
            }
            set {
                if ((this.MeterTypeField.Equals(value) != true)) {
                    this.MeterTypeField = value;
                    this.RaisePropertyChanged("MeterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MeterWires {
            get {
                return this.MeterWiresField;
            }
            set {
                if ((this.MeterWiresField.Equals(value) != true)) {
                    this.MeterWiresField = value;
                    this.RaisePropertyChanged("MeterWires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonitorId {
            get {
                return this.MonitorIdField;
            }
            set {
                if ((this.MonitorIdField.Equals(value) != true)) {
                    this.MonitorIdField = value;
                    this.RaisePropertyChanged("MonitorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkDepartureId {
            get {
                return this.NetworkDepartureIdField;
            }
            set {
                if ((this.NetworkDepartureIdField.Equals(value) != true)) {
                    this.NetworkDepartureIdField = value;
                    this.RaisePropertyChanged("NetworkDepartureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NominalFrequency {
            get {
                return this.NominalFrequencyField;
            }
            set {
                if ((this.NominalFrequencyField.Equals(value) != true)) {
                    this.NominalFrequencyField = value;
                    this.RaisePropertyChanged("NominalFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notification {
            get {
                return this.NotificationField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationField, value) != true)) {
                    this.NotificationField = value;
                    this.RaisePropertyChanged("Notification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PasswordLaboratoryTaskDate {
            get {
                return this.PasswordLaboratoryTaskDateField;
            }
            set {
                if ((this.PasswordLaboratoryTaskDateField.Equals(value) != true)) {
                    this.PasswordLaboratoryTaskDateField = value;
                    this.RaisePropertyChanged("PasswordLaboratoryTaskDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordReading {
            get {
                return this.PasswordReadingField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordReadingField, value) != true)) {
                    this.PasswordReadingField = value;
                    this.RaisePropertyChanged("PasswordReading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordWriting {
            get {
                return this.PasswordWritingField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordWritingField, value) != true)) {
                    this.PasswordWritingField = value;
                    this.RaisePropertyChanged("PasswordWriting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhysicalAddress {
            get {
                return this.PhysicalAddressField;
            }
            set {
                if ((this.PhysicalAddressField.Equals(value) != true)) {
                    this.PhysicalAddressField = value;
                    this.RaisePropertyChanged("PhysicalAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortableTerminalId {
            get {
                return this.PortableTerminalIdField;
            }
            set {
                if ((this.PortableTerminalIdField.Equals(value) != true)) {
                    this.PortableTerminalIdField = value;
                    this.RaisePropertyChanged("PortableTerminalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PowerNextEstimated {
            get {
                return this.PowerNextEstimatedField;
            }
            set {
                if ((this.PowerNextEstimatedField.Equals(value) != true)) {
                    this.PowerNextEstimatedField = value;
                    this.RaisePropertyChanged("PowerNextEstimated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PowerTheory {
            get {
                return this.PowerTheoryField;
            }
            set {
                if ((this.PowerTheoryField.Equals(value) != true)) {
                    this.PowerTheoryField = value;
                    this.RaisePropertyChanged("PowerTheory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProduction Production {
            get {
                return this.ProductionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionField, value) != true)) {
                    this.ProductionField = value;
                    this.RaisePropertyChanged("Production");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatBegin {
            get {
                return this.StatBeginField;
            }
            set {
                if ((this.StatBeginField.Equals(value) != true)) {
                    this.StatBeginField = value;
                    this.RaisePropertyChanged("StatBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatCountTry1 {
            get {
                return this.StatCountTry1Field;
            }
            set {
                if ((this.StatCountTry1Field.Equals(value) != true)) {
                    this.StatCountTry1Field = value;
                    this.RaisePropertyChanged("StatCountTry1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatCountTry2 {
            get {
                return this.StatCountTry2Field;
            }
            set {
                if ((this.StatCountTry2Field.Equals(value) != true)) {
                    this.StatCountTry2Field = value;
                    this.RaisePropertyChanged("StatCountTry2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatCountTry3 {
            get {
                return this.StatCountTry3Field;
            }
            set {
                if ((this.StatCountTry3Field.Equals(value) != true)) {
                    this.StatCountTry3Field = value;
                    this.RaisePropertyChanged("StatCountTry3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatCountTry4 {
            get {
                return this.StatCountTry4Field;
            }
            set {
                if ((this.StatCountTry4Field.Equals(value) != true)) {
                    this.StatCountTry4Field = value;
                    this.RaisePropertyChanged("StatCountTry4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatLastError {
            get {
                return this.StatLastErrorField;
            }
            set {
                if ((this.StatLastErrorField.Equals(value) != true)) {
                    this.StatLastErrorField = value;
                    this.RaisePropertyChanged("StatLastError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatLastErrorMessage {
            get {
                return this.StatLastErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatLastErrorMessageField, value) != true)) {
                    this.StatLastErrorMessageField = value;
                    this.RaisePropertyChanged("StatLastErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StatLastSuccess {
            get {
                return this.StatLastSuccessField;
            }
            set {
                if ((this.StatLastSuccessField.Equals(value) != true)) {
                    this.StatLastSuccessField = value;
                    this.RaisePropertyChanged("StatLastSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int THDDefectNumberCurrent {
            get {
                return this.THDDefectNumberCurrentField;
            }
            set {
                if ((this.THDDefectNumberCurrentField.Equals(value) != true)) {
                    this.THDDefectNumberCurrentField = value;
                    this.RaisePropertyChanged("THDDefectNumberCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int THDDefectNumberVoltage {
            get {
                return this.THDDefectNumberVoltageField;
            }
            set {
                if ((this.THDDefectNumberVoltageField.Equals(value) != true)) {
                    this.THDDefectNumberVoltageField = value;
                    this.RaisePropertyChanged("THDDefectNumberVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VoltageQualityDate {
            get {
                return this.VoltageQualityDateField;
            }
            set {
                if ((this.VoltageQualityDateField.Equals(value) != true)) {
                    this.VoltageQualityDateField = value;
                    this.RaisePropertyChanged("VoltageQualityDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VoltageURef {
            get {
                return this.VoltageURefField;
            }
            set {
                if ((this.VoltageURefField.Equals(value) != true)) {
                    this.VoltageURefField = value;
                    this.RaisePropertyChanged("VoltageURef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float WaveformSamplingPeriod {
            get {
                return this.WaveformSamplingPeriodField;
            }
            set {
                if ((this.WaveformSamplingPeriodField.Equals(value) != true)) {
                    this.WaveformSamplingPeriodField = value;
                    this.RaisePropertyChanged("WaveformSamplingPeriod");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOPortableTerminal", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOPortableTerminal : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortableTerminalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortableTerminalIdentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortableTerminalLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortableTerminalModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortableTerminalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortableTerminalOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumPortableTerminalType PortableTerminalTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortableTerminalId {
            get {
                return this.PortableTerminalIdField;
            }
            set {
                if ((this.PortableTerminalIdField.Equals(value) != true)) {
                    this.PortableTerminalIdField = value;
                    this.RaisePropertyChanged("PortableTerminalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortableTerminalIdent {
            get {
                return this.PortableTerminalIdentField;
            }
            set {
                if ((object.ReferenceEquals(this.PortableTerminalIdentField, value) != true)) {
                    this.PortableTerminalIdentField = value;
                    this.RaisePropertyChanged("PortableTerminalIdent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortableTerminalLocation {
            get {
                return this.PortableTerminalLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.PortableTerminalLocationField, value) != true)) {
                    this.PortableTerminalLocationField = value;
                    this.RaisePropertyChanged("PortableTerminalLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortableTerminalModel {
            get {
                return this.PortableTerminalModelField;
            }
            set {
                if ((object.ReferenceEquals(this.PortableTerminalModelField, value) != true)) {
                    this.PortableTerminalModelField = value;
                    this.RaisePropertyChanged("PortableTerminalModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortableTerminalName {
            get {
                return this.PortableTerminalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PortableTerminalNameField, value) != true)) {
                    this.PortableTerminalNameField = value;
                    this.RaisePropertyChanged("PortableTerminalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PortableTerminalOwner {
            get {
                return this.PortableTerminalOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PortableTerminalOwnerField, value) != true)) {
                    this.PortableTerminalOwnerField = value;
                    this.RaisePropertyChanged("PortableTerminalOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumPortableTerminalType PortableTerminalType {
            get {
                return this.PortableTerminalTypeField;
            }
            set {
                if ((this.PortableTerminalTypeField.Equals(value) != true)) {
                    this.PortableTerminalTypeField = value;
                    this.RaisePropertyChanged("PortableTerminalType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOLogin", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOLogin : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerGroupId {
            get {
                return this.CustomerGroupIdField;
            }
            set {
                if ((this.CustomerGroupIdField.Equals(value) != true)) {
                    this.CustomerGroupIdField = value;
                    this.RaisePropertyChanged("CustomerGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoginId {
            get {
                return this.LoginIdField;
            }
            set {
                if ((this.LoginIdField.Equals(value) != true)) {
                    this.LoginIdField = value;
                    this.RaisePropertyChanged("LoginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMS {
            get {
                return this.SMSField;
            }
            set {
                if ((object.ReferenceEquals(this.SMSField, value) != true)) {
                    this.SMSField = value;
                    this.RaisePropertyChanged("SMS");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeterStop", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeterStop : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasurementDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeasurementStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasurementDate {
            get {
                return this.MeasurementDateField;
            }
            set {
                if ((this.MeasurementDateField.Equals(value) != true)) {
                    this.MeasurementDateField = value;
                    this.RaisePropertyChanged("MeasurementDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeasurementState {
            get {
                return this.MeasurementStateField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasurementStateField, value) != true)) {
                    this.MeasurementStateField = value;
                    this.RaisePropertyChanged("MeasurementState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeterCheckConfig", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeterCheckConfig : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckConfig {
            get {
                return this.CheckConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckConfigField, value) != true)) {
                    this.CheckConfigField = value;
                    this.RaisePropertyChanged("CheckConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOCustomerIdentifier", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOCustomerIdentifier : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeterGroup", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeterGroup : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] MeterListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeter MeterTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterGroupId {
            get {
                return this.MeterGroupIdField;
            }
            set {
                if ((this.MeterGroupIdField.Equals(value) != true)) {
                    this.MeterGroupIdField = value;
                    this.RaisePropertyChanged("MeterGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterGroupName {
            get {
                return this.MeterGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterGroupNameField, value) != true)) {
                    this.MeterGroupNameField = value;
                    this.RaisePropertyChanged("MeterGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] MeterList {
            get {
                return this.MeterListField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterListField, value) != true)) {
                    this.MeterListField = value;
                    this.RaisePropertyChanged("MeterList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeter MeterType {
            get {
                return this.MeterTypeField;
            }
            set {
                if ((this.MeterTypeField.Equals(value) != true)) {
                    this.MeterTypeField = value;
                    this.RaisePropertyChanged("MeterType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeterSummation", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeterSummation : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODynamicSummationCriteria[] DynamicSummationCriteriaListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterInSummation[] MeterListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterSummationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterSummationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterSummation MeterSummationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VirtualMeterIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODynamicSummationCriteria[] DynamicSummationCriteriaList {
            get {
                return this.DynamicSummationCriteriaListField;
            }
            set {
                if ((object.ReferenceEquals(this.DynamicSummationCriteriaListField, value) != true)) {
                    this.DynamicSummationCriteriaListField = value;
                    this.RaisePropertyChanged("DynamicSummationCriteriaList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterInSummation[] MeterList {
            get {
                return this.MeterListField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterListField, value) != true)) {
                    this.MeterListField = value;
                    this.RaisePropertyChanged("MeterList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterSummationId {
            get {
                return this.MeterSummationIdField;
            }
            set {
                if ((this.MeterSummationIdField.Equals(value) != true)) {
                    this.MeterSummationIdField = value;
                    this.RaisePropertyChanged("MeterSummationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterSummationName {
            get {
                return this.MeterSummationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterSummationNameField, value) != true)) {
                    this.MeterSummationNameField = value;
                    this.RaisePropertyChanged("MeterSummationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterSummation MeterSummationType {
            get {
                return this.MeterSummationTypeField;
            }
            set {
                if ((this.MeterSummationTypeField.Equals(value) != true)) {
                    this.MeterSummationTypeField = value;
                    this.RaisePropertyChanged("MeterSummationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VirtualMeterId {
            get {
                return this.VirtualMeterIdField;
            }
            set {
                if ((this.VirtualMeterIdField.Equals(value) != true)) {
                    this.VirtualMeterIdField = value;
                    this.RaisePropertyChanged("VirtualMeterId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTODynamicSummationCriteria", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTODynamicSummationCriteria : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumDynamicSummationCriteria CriteriaTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CriteriaValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DynamicSumCriteriaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterSummationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumDynamicSummationCriteria CriteriaType {
            get {
                return this.CriteriaTypeField;
            }
            set {
                if ((this.CriteriaTypeField.Equals(value) != true)) {
                    this.CriteriaTypeField = value;
                    this.RaisePropertyChanged("CriteriaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CriteriaValue {
            get {
                return this.CriteriaValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CriteriaValueField, value) != true)) {
                    this.CriteriaValueField = value;
                    this.RaisePropertyChanged("CriteriaValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DynamicSumCriteriaId {
            get {
                return this.DynamicSumCriteriaIdField;
            }
            set {
                if ((this.DynamicSumCriteriaIdField.Equals(value) != true)) {
                    this.DynamicSumCriteriaIdField = value;
                    this.RaisePropertyChanged("DynamicSumCriteriaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterSummationId {
            get {
                return this.MeterSummationIdField;
            }
            set {
                if ((this.MeterSummationIdField.Equals(value) != true)) {
                    this.MeterSummationIdField = value;
                    this.RaisePropertyChanged("MeterSummationId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeterInSummation", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeterInSummation : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPlusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPlus {
            get {
                return this.IsPlusField;
            }
            set {
                if ((this.IsPlusField.Equals(value) != true)) {
                    this.IsPlusField = value;
                    this.RaisePropertyChanged("IsPlus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOLoadProfile", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOLoadProfile : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] LoadProfileConfigurationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoadProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoadProfileIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] LoadProfileConfigurations {
            get {
                return this.LoadProfileConfigurationsField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadProfileConfigurationsField, value) != true)) {
                    this.LoadProfileConfigurationsField = value;
                    this.RaisePropertyChanged("LoadProfileConfigurations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadProfileId {
            get {
                return this.LoadProfileIdField;
            }
            set {
                if ((this.LoadProfileIdField.Equals(value) != true)) {
                    this.LoadProfileIdField = value;
                    this.RaisePropertyChanged("LoadProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadProfileIndex {
            get {
                return this.LoadProfileIndexField;
            }
            set {
                if ((this.LoadProfileIndexField.Equals(value) != true)) {
                    this.LoadProfileIndexField = value;
                    this.RaisePropertyChanged("LoadProfileIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOLoadProfileConfig", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOLoadProfileConfig : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ChannelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfigBeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfigEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfigEndPullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfigRecordingIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnergyRecordingFormat EnergyRecordingFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoadProfileConfigIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoadProfileIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Channels {
            get {
                return this.ChannelsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelsField, value) != true)) {
                    this.ChannelsField = value;
                    this.RaisePropertyChanged("Channels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfigBegin {
            get {
                return this.ConfigBeginField;
            }
            set {
                if ((this.ConfigBeginField.Equals(value) != true)) {
                    this.ConfigBeginField = value;
                    this.RaisePropertyChanged("ConfigBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfigEnd {
            get {
                return this.ConfigEndField;
            }
            set {
                if ((this.ConfigEndField.Equals(value) != true)) {
                    this.ConfigEndField = value;
                    this.RaisePropertyChanged("ConfigEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfigEndPull {
            get {
                return this.ConfigEndPullField;
            }
            set {
                if ((this.ConfigEndPullField.Equals(value) != true)) {
                    this.ConfigEndPullField = value;
                    this.RaisePropertyChanged("ConfigEndPull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConfigRecordingInterval {
            get {
                return this.ConfigRecordingIntervalField;
            }
            set {
                if ((this.ConfigRecordingIntervalField.Equals(value) != true)) {
                    this.ConfigRecordingIntervalField = value;
                    this.RaisePropertyChanged("ConfigRecordingInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnergyRecordingFormat EnergyRecordingFormat {
            get {
                return this.EnergyRecordingFormatField;
            }
            set {
                if ((this.EnergyRecordingFormatField.Equals(value) != true)) {
                    this.EnergyRecordingFormatField = value;
                    this.RaisePropertyChanged("EnergyRecordingFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadProfileConfigId {
            get {
                return this.LoadProfileConfigIdField;
            }
            set {
                if ((this.LoadProfileConfigIdField.Equals(value) != true)) {
                    this.LoadProfileConfigIdField = value;
                    this.RaisePropertyChanged("LoadProfileConfigId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadProfileId {
            get {
                return this.LoadProfileIdField;
            }
            set {
                if ((this.LoadProfileIdField.Equals(value) != true)) {
                    this.LoadProfileIdField = value;
                    this.RaisePropertyChanged("LoadProfileId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOChannel", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOChannel : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnergyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExcessEnergyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoadProfileConfigIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte ScalarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumUnit UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumChannelWorkingMode WorkingModeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelId {
            get {
                return this.ChannelIdField;
            }
            set {
                if ((this.ChannelIdField.Equals(value) != true)) {
                    this.ChannelIdField = value;
                    this.RaisePropertyChanged("ChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Energy {
            get {
                return this.EnergyField;
            }
            set {
                if ((object.ReferenceEquals(this.EnergyField, value) != true)) {
                    this.EnergyField = value;
                    this.RaisePropertyChanged("Energy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExcessEnergy {
            get {
                return this.IsExcessEnergyField;
            }
            set {
                if ((this.IsExcessEnergyField.Equals(value) != true)) {
                    this.IsExcessEnergyField = value;
                    this.RaisePropertyChanged("IsExcessEnergy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadProfileConfigId {
            get {
                return this.LoadProfileConfigIdField;
            }
            set {
                if ((this.LoadProfileConfigIdField.Equals(value) != true)) {
                    this.LoadProfileConfigIdField = value;
                    this.RaisePropertyChanged("LoadProfileConfigId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Scalar {
            get {
                return this.ScalarField;
            }
            set {
                if ((this.ScalarField.Equals(value) != true)) {
                    this.ScalarField = value;
                    this.RaisePropertyChanged("Scalar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumUnit Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumChannelWorkingMode WorkingMode {
            get {
                return this.WorkingModeField;
            }
            set {
                if ((this.WorkingModeField.Equals(value) != true)) {
                    this.WorkingModeField = value;
                    this.RaisePropertyChanged("WorkingMode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEvent", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOEvent : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventInsideEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventInsideStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventMeasureEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEvent[] EventsEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEvent[] EventsInsideEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEvent[] EventsInsideStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEvent[] EventsStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoadProfileConfigIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventEnd {
            get {
                return this.EventEndField;
            }
            set {
                if ((this.EventEndField.Equals(value) != true)) {
                    this.EventEndField = value;
                    this.RaisePropertyChanged("EventEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventId {
            get {
                return this.EventIdField;
            }
            set {
                if ((this.EventIdField.Equals(value) != true)) {
                    this.EventIdField = value;
                    this.RaisePropertyChanged("EventId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventInsideEnd {
            get {
                return this.EventInsideEndField;
            }
            set {
                if ((this.EventInsideEndField.Equals(value) != true)) {
                    this.EventInsideEndField = value;
                    this.RaisePropertyChanged("EventInsideEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventInsideStart {
            get {
                return this.EventInsideStartField;
            }
            set {
                if ((this.EventInsideStartField.Equals(value) != true)) {
                    this.EventInsideStartField = value;
                    this.RaisePropertyChanged("EventInsideStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventMeasureEnd {
            get {
                return this.EventMeasureEndField;
            }
            set {
                if ((this.EventMeasureEndField.Equals(value) != true)) {
                    this.EventMeasureEndField = value;
                    this.RaisePropertyChanged("EventMeasureEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventStart {
            get {
                return this.EventStartField;
            }
            set {
                if ((this.EventStartField.Equals(value) != true)) {
                    this.EventStartField = value;
                    this.RaisePropertyChanged("EventStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEvent[] EventsEnd {
            get {
                return this.EventsEndField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsEndField, value) != true)) {
                    this.EventsEndField = value;
                    this.RaisePropertyChanged("EventsEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEvent[] EventsInsideEnd {
            get {
                return this.EventsInsideEndField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsInsideEndField, value) != true)) {
                    this.EventsInsideEndField = value;
                    this.RaisePropertyChanged("EventsInsideEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEvent[] EventsInsideStart {
            get {
                return this.EventsInsideStartField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsInsideStartField, value) != true)) {
                    this.EventsInsideStartField = value;
                    this.RaisePropertyChanged("EventsInsideStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEvent[] EventsStart {
            get {
                return this.EventsStartField;
            }
            set {
                if ((object.ReferenceEquals(this.EventsStartField, value) != true)) {
                    this.EventsStartField = value;
                    this.RaisePropertyChanged("EventsStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadProfileConfigId {
            get {
                return this.LoadProfileConfigIdField;
            }
            set {
                if ((this.LoadProfileConfigIdField.Equals(value) != true)) {
                    this.LoadProfileConfigIdField = value;
                    this.RaisePropertyChanged("LoadProfileConfigId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEndOfBillingIdentifier", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOEndOfBillingIdentifier : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndOfBillingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndOfBillingId {
            get {
                return this.EndOfBillingIdField;
            }
            set {
                if ((this.EndOfBillingIdField.Equals(value) != true)) {
                    this.EndOfBillingIdField = value;
                    this.RaisePropertyChanged("EndOfBillingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEndOfBilling", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOEndOfBilling : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBillingExcess[] BillingExcessArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] BillingMaxArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] BillingRMSMaxArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] BillingRateArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] BillingTotalArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DaysCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndOfBillingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEOBExcessMode ExcessModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] GlobalValueArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntegrationPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEOBMaxMode MaxModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResetsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalOperatingTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBillingExcess[] BillingExcessArray {
            get {
                return this.BillingExcessArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingExcessArrayField, value) != true)) {
                    this.BillingExcessArrayField = value;
                    this.RaisePropertyChanged("BillingExcessArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] BillingMaxArray {
            get {
                return this.BillingMaxArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingMaxArrayField, value) != true)) {
                    this.BillingMaxArrayField = value;
                    this.RaisePropertyChanged("BillingMaxArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] BillingRMSMaxArray {
            get {
                return this.BillingRMSMaxArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingRMSMaxArrayField, value) != true)) {
                    this.BillingRMSMaxArrayField = value;
                    this.RaisePropertyChanged("BillingRMSMaxArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] BillingRateArray {
            get {
                return this.BillingRateArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingRateArrayField, value) != true)) {
                    this.BillingRateArrayField = value;
                    this.RaisePropertyChanged("BillingRateArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] BillingTotalArray {
            get {
                return this.BillingTotalArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingTotalArrayField, value) != true)) {
                    this.BillingTotalArrayField = value;
                    this.RaisePropertyChanged("BillingTotalArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysCount {
            get {
                return this.DaysCountField;
            }
            set {
                if ((this.DaysCountField.Equals(value) != true)) {
                    this.DaysCountField = value;
                    this.RaisePropertyChanged("DaysCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndOfBillingId {
            get {
                return this.EndOfBillingIdField;
            }
            set {
                if ((this.EndOfBillingIdField.Equals(value) != true)) {
                    this.EndOfBillingIdField = value;
                    this.RaisePropertyChanged("EndOfBillingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEOBExcessMode ExcessMode {
            get {
                return this.ExcessModeField;
            }
            set {
                if ((this.ExcessModeField.Equals(value) != true)) {
                    this.ExcessModeField = value;
                    this.RaisePropertyChanged("ExcessMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] GlobalValueArray {
            get {
                return this.GlobalValueArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalValueArrayField, value) != true)) {
                    this.GlobalValueArrayField = value;
                    this.RaisePropertyChanged("GlobalValueArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntegrationPeriod {
            get {
                return this.IntegrationPeriodField;
            }
            set {
                if ((this.IntegrationPeriodField.Equals(value) != true)) {
                    this.IntegrationPeriodField = value;
                    this.RaisePropertyChanged("IntegrationPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumEOBMaxMode MaxMode {
            get {
                return this.MaxModeField;
            }
            set {
                if ((this.MaxModeField.Equals(value) != true)) {
                    this.MaxModeField = value;
                    this.RaisePropertyChanged("MaxMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReadDate {
            get {
                return this.ReadDateField;
            }
            set {
                if ((this.ReadDateField.Equals(value) != true)) {
                    this.ReadDateField = value;
                    this.RaisePropertyChanged("ReadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((this.ReasonField.Equals(value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResetsCount {
            get {
                return this.ResetsCountField;
            }
            set {
                if ((this.ResetsCountField.Equals(value) != true)) {
                    this.ResetsCountField = value;
                    this.RaisePropertyChanged("ResetsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalOperatingTime {
            get {
                return this.TotalOperatingTimeField;
            }
            set {
                if ((this.TotalOperatingTimeField.Equals(value) != true)) {
                    this.TotalOperatingTimeField = value;
                    this.RaisePropertyChanged("TotalOperatingTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEndOfBillingExcess", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOEndOfBillingExcess : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EOBExcessCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue EOBExcessDurationValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue EOBExcessLimitValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue EOBExcessMagnitudeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue EOBExcessOverValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EndOfBillingExcessIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EOBExcessCount {
            get {
                return this.EOBExcessCountField;
            }
            set {
                if ((this.EOBExcessCountField.Equals(value) != true)) {
                    this.EOBExcessCountField = value;
                    this.RaisePropertyChanged("EOBExcessCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue EOBExcessDurationValue {
            get {
                return this.EOBExcessDurationValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EOBExcessDurationValueField, value) != true)) {
                    this.EOBExcessDurationValueField = value;
                    this.RaisePropertyChanged("EOBExcessDurationValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue EOBExcessLimitValue {
            get {
                return this.EOBExcessLimitValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EOBExcessLimitValueField, value) != true)) {
                    this.EOBExcessLimitValueField = value;
                    this.RaisePropertyChanged("EOBExcessLimitValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue EOBExcessMagnitudeValue {
            get {
                return this.EOBExcessMagnitudeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EOBExcessMagnitudeValueField, value) != true)) {
                    this.EOBExcessMagnitudeValueField = value;
                    this.RaisePropertyChanged("EOBExcessMagnitudeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue EOBExcessOverValue {
            get {
                return this.EOBExcessOverValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EOBExcessOverValueField, value) != true)) {
                    this.EOBExcessOverValueField = value;
                    this.RaisePropertyChanged("EOBExcessOverValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EndOfBillingExcessId {
            get {
                return this.EndOfBillingExcessIdField;
            }
            set {
                if ((this.EndOfBillingExcessIdField.Equals(value) != true)) {
                    this.EndOfBillingExcessIdField = value;
                    this.RaisePropertyChanged("EndOfBillingExcessId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOValue", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOValue : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte ValueScalarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumValueType ValueTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ValueUnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateValue {
            get {
                return this.DateValueField;
            }
            set {
                if ((this.DateValueField.Equals(value) != true)) {
                    this.DateValueField = value;
                    this.RaisePropertyChanged("DateValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogicalName {
            get {
                return this.LogicalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicalNameField, value) != true)) {
                    this.LogicalNameField = value;
                    this.RaisePropertyChanged("LogicalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueId {
            get {
                return this.ValueIdField;
            }
            set {
                if ((this.ValueIdField.Equals(value) != true)) {
                    this.ValueIdField = value;
                    this.RaisePropertyChanged("ValueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueName {
            get {
                return this.ValueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueNameField, value) != true)) {
                    this.ValueNameField = value;
                    this.RaisePropertyChanged("ValueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte ValueScalar {
            get {
                return this.ValueScalarField;
            }
            set {
                if ((this.ValueScalarField.Equals(value) != true)) {
                    this.ValueScalarField = value;
                    this.RaisePropertyChanged("ValueScalar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumValueType ValueType {
            get {
                return this.ValueTypeField;
            }
            set {
                if ((this.ValueTypeField.Equals(value) != true)) {
                    this.ValueTypeField = value;
                    this.RaisePropertyChanged("ValueType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ValueUnit {
            get {
                return this.ValueUnitField;
            }
            set {
                if ((this.ValueUnitField.Equals(value) != true)) {
                    this.ValueUnitField = value;
                    this.RaisePropertyChanged("ValueUnit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOInstantaneousIdentifier", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOInstantaneousIdentifier : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstantaneousIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstantaneousId {
            get {
                return this.InstantaneousIdField;
            }
            set {
                if ((this.InstantaneousIdField.Equals(value) != true)) {
                    this.InstantaneousIdField = value;
                    this.RaisePropertyChanged("InstantaneousId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOInstantaneous", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOInstantaneous : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] FactorListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstantaneousIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] NeutralListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] PhaseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] PowerListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] RMSListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] RateListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] THDListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] TotalListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] FactorList {
            get {
                return this.FactorListField;
            }
            set {
                if ((object.ReferenceEquals(this.FactorListField, value) != true)) {
                    this.FactorListField = value;
                    this.RaisePropertyChanged("FactorList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstantaneousId {
            get {
                return this.InstantaneousIdField;
            }
            set {
                if ((this.InstantaneousIdField.Equals(value) != true)) {
                    this.InstantaneousIdField = value;
                    this.RaisePropertyChanged("InstantaneousId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] NeutralList {
            get {
                return this.NeutralListField;
            }
            set {
                if ((object.ReferenceEquals(this.NeutralListField, value) != true)) {
                    this.NeutralListField = value;
                    this.RaisePropertyChanged("NeutralList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] PhaseList {
            get {
                return this.PhaseListField;
            }
            set {
                if ((object.ReferenceEquals(this.PhaseListField, value) != true)) {
                    this.PhaseListField = value;
                    this.RaisePropertyChanged("PhaseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] PowerList {
            get {
                return this.PowerListField;
            }
            set {
                if ((object.ReferenceEquals(this.PowerListField, value) != true)) {
                    this.PowerListField = value;
                    this.RaisePropertyChanged("PowerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] RMSList {
            get {
                return this.RMSListField;
            }
            set {
                if ((object.ReferenceEquals(this.RMSListField, value) != true)) {
                    this.RMSListField = value;
                    this.RaisePropertyChanged("RMSList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] RateList {
            get {
                return this.RateListField;
            }
            set {
                if ((object.ReferenceEquals(this.RateListField, value) != true)) {
                    this.RateListField = value;
                    this.RaisePropertyChanged("RateList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] THDList {
            get {
                return this.THDListField;
            }
            set {
                if ((object.ReferenceEquals(this.THDListField, value) != true)) {
                    this.THDListField = value;
                    this.RaisePropertyChanged("THDList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] TotalList {
            get {
                return this.TotalListField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalListField, value) != true)) {
                    this.TotalListField = value;
                    this.RaisePropertyChanged("TotalList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOStatusWordIdentifier", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOStatusWordIdentifier : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusWordIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusWordId {
            get {
                return this.StatusWordIdField;
            }
            set {
                if ((this.StatusWordIdField.Equals(value) != true)) {
                    this.StatusWordIdField = value;
                    this.RaisePropertyChanged("StatusWordId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOStatusWord", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOStatusWord : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FatalAlarmsCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NonFatalAlarmsCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusWordIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FatalAlarmsCodes {
            get {
                return this.FatalAlarmsCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.FatalAlarmsCodesField, value) != true)) {
                    this.FatalAlarmsCodesField = value;
                    this.RaisePropertyChanged("FatalAlarmsCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NonFatalAlarmsCodes {
            get {
                return this.NonFatalAlarmsCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.NonFatalAlarmsCodesField, value) != true)) {
                    this.NonFatalAlarmsCodesField = value;
                    this.RaisePropertyChanged("NonFatalAlarmsCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusWordId {
            get {
                return this.StatusWordIdField;
            }
            set {
                if ((this.StatusWordIdField.Equals(value) != true)) {
                    this.StatusWordIdField = value;
                    this.RaisePropertyChanged("StatusWordId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOWaveformIdentifier", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOWaveformIdentifier : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WaveformIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WaveformId {
            get {
                return this.WaveformIdField;
            }
            set {
                if ((this.WaveformIdField.Equals(value) != true)) {
                    this.WaveformIdField = value;
                    this.RaisePropertyChanged("WaveformId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOWaveform", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOWaveform : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CurrentI1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CurrentI2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] CurrentI3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] VoltageU1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] VoltageU2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] VoltageU3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWaveformAlgorithm WaveformAlgorithmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WaveformIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CurrentI1 {
            get {
                return this.CurrentI1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentI1Field, value) != true)) {
                    this.CurrentI1Field = value;
                    this.RaisePropertyChanged("CurrentI1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CurrentI2 {
            get {
                return this.CurrentI2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentI2Field, value) != true)) {
                    this.CurrentI2Field = value;
                    this.RaisePropertyChanged("CurrentI2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] CurrentI3 {
            get {
                return this.CurrentI3Field;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentI3Field, value) != true)) {
                    this.CurrentI3Field = value;
                    this.RaisePropertyChanged("CurrentI3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] VoltageU1 {
            get {
                return this.VoltageU1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VoltageU1Field, value) != true)) {
                    this.VoltageU1Field = value;
                    this.RaisePropertyChanged("VoltageU1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] VoltageU2 {
            get {
                return this.VoltageU2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VoltageU2Field, value) != true)) {
                    this.VoltageU2Field = value;
                    this.RaisePropertyChanged("VoltageU2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] VoltageU3 {
            get {
                return this.VoltageU3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VoltageU3Field, value) != true)) {
                    this.VoltageU3Field = value;
                    this.RaisePropertyChanged("VoltageU3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWaveformAlgorithm WaveformAlgorithm {
            get {
                return this.WaveformAlgorithmField;
            }
            set {
                if ((this.WaveformAlgorithmField.Equals(value) != true)) {
                    this.WaveformAlgorithmField = value;
                    this.RaisePropertyChanged("WaveformAlgorithm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WaveformId {
            get {
                return this.WaveformIdField;
            }
            set {
                if ((this.WaveformIdField.Equals(value) != true)) {
                    this.WaveformIdField = value;
                    this.RaisePropertyChanged("WaveformId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOLogBook", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOLogBook : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ident {
            get {
                return this.IdentField;
            }
            set {
                if ((this.IdentField.Equals(value) != true)) {
                    this.IdentField = value;
                    this.RaisePropertyChanged("Ident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogBookId {
            get {
                return this.LogBookIdField;
            }
            set {
                if ((this.LogBookIdField.Equals(value) != true)) {
                    this.LogBookIdField = value;
                    this.RaisePropertyChanged("LogBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Param {
            get {
                return this.ParamField;
            }
            set {
                if ((this.ParamField.Equals(value) != true)) {
                    this.ParamField = value;
                    this.RaisePropertyChanged("Param");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOVoltageQualitySummary", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOVoltageQualitySummary : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualitySummaryPhase[] PhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoltageQualitySummaryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQuality VoltageQualityTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualitySummaryPhase[] Phase {
            get {
                return this.PhaseField;
            }
            set {
                if ((object.ReferenceEquals(this.PhaseField, value) != true)) {
                    this.PhaseField = value;
                    this.RaisePropertyChanged("Phase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoltageQualitySummaryId {
            get {
                return this.VoltageQualitySummaryIdField;
            }
            set {
                if ((this.VoltageQualitySummaryIdField.Equals(value) != true)) {
                    this.VoltageQualitySummaryIdField = value;
                    this.RaisePropertyChanged("VoltageQualitySummaryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQuality VoltageQualityType {
            get {
                return this.VoltageQualityTypeField;
            }
            set {
                if ((this.VoltageQualityTypeField.Equals(value) != true)) {
                    this.VoltageQualityTypeField = value;
                    this.RaisePropertyChanged("VoltageQualityType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOVoltageQualitySummaryPhase", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOVoltageQualitySummaryPhase : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue MaxDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue MinDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalDurationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue MaxDuration {
            get {
                return this.MaxDurationField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxDurationField, value) != true)) {
                    this.MaxDurationField = value;
                    this.RaisePropertyChanged("MaxDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue MinDuration {
            get {
                return this.MinDurationField;
            }
            set {
                if ((object.ReferenceEquals(this.MinDurationField, value) != true)) {
                    this.MinDurationField = value;
                    this.RaisePropertyChanged("MinDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phase {
            get {
                return this.PhaseField;
            }
            set {
                if ((this.PhaseField.Equals(value) != true)) {
                    this.PhaseField = value;
                    this.RaisePropertyChanged("Phase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalDuration {
            get {
                return this.TotalDurationField;
            }
            set {
                if ((this.TotalDurationField.Equals(value) != true)) {
                    this.TotalDurationField = value;
                    this.RaisePropertyChanged("TotalDuration");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOVoltageQualityHistory", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOVoltageQualityHistory : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HistoryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogBookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue MagnitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoltageQualityHistoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQuality VoltageQualityTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HistoryDate {
            get {
                return this.HistoryDateField;
            }
            set {
                if ((this.HistoryDateField.Equals(value) != true)) {
                    this.HistoryDateField = value;
                    this.RaisePropertyChanged("HistoryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogBook {
            get {
                return this.LogBookField;
            }
            set {
                if ((this.LogBookField.Equals(value) != true)) {
                    this.LogBookField = value;
                    this.RaisePropertyChanged("LogBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue Magnitude {
            get {
                return this.MagnitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.MagnitudeField, value) != true)) {
                    this.MagnitudeField = value;
                    this.RaisePropertyChanged("Magnitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phase {
            get {
                return this.PhaseField;
            }
            set {
                if ((this.PhaseField.Equals(value) != true)) {
                    this.PhaseField = value;
                    this.RaisePropertyChanged("Phase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoltageQualityHistoryId {
            get {
                return this.VoltageQualityHistoryIdField;
            }
            set {
                if ((this.VoltageQualityHistoryIdField.Equals(value) != true)) {
                    this.VoltageQualityHistoryIdField = value;
                    this.RaisePropertyChanged("VoltageQualityHistoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQuality VoltageQualityType {
            get {
                return this.VoltageQualityTypeField;
            }
            set {
                if ((this.VoltageQualityTypeField.Equals(value) != true)) {
                    this.VoltageQualityTypeField = value;
                    this.RaisePropertyChanged("VoltageQualityType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOVoltageQualityTHDDefectHistory", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOVoltageQualityTHDDefectHistory : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DisappearanceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] ElementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LogBookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoltageQualityTHDDefectHistoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQualityTHDDefectHistory VoltageQualityTHDDefectHistoryTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DisappearanceDate {
            get {
                return this.DisappearanceDateField;
            }
            set {
                if ((this.DisappearanceDateField.Equals(value) != true)) {
                    this.DisappearanceDateField = value;
                    this.RaisePropertyChanged("DisappearanceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOValue[] Elements {
            get {
                return this.ElementsField;
            }
            set {
                if ((object.ReferenceEquals(this.ElementsField, value) != true)) {
                    this.ElementsField = value;
                    this.RaisePropertyChanged("Elements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogBook {
            get {
                return this.LogBookField;
            }
            set {
                if ((this.LogBookField.Equals(value) != true)) {
                    this.LogBookField = value;
                    this.RaisePropertyChanged("LogBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoltageQualityTHDDefectHistoryId {
            get {
                return this.VoltageQualityTHDDefectHistoryIdField;
            }
            set {
                if ((this.VoltageQualityTHDDefectHistoryIdField.Equals(value) != true)) {
                    this.VoltageQualityTHDDefectHistoryIdField = value;
                    this.RaisePropertyChanged("VoltageQualityTHDDefectHistoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQualityTHDDefectHistory VoltageQualityTHDDefectHistoryType {
            get {
                return this.VoltageQualityTHDDefectHistoryTypeField;
            }
            set {
                if ((this.VoltageQualityTHDDefectHistoryTypeField.Equals(value) != true)) {
                    this.VoltageQualityTHDDefectHistoryTypeField = value;
                    this.RaisePropertyChanged("VoltageQualityTHDDefectHistoryType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOAuth", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOAuth : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumAuthenticate AuthenticateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumAuthorization AuthorizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumAuthenticate Authenticate {
            get {
                return this.AuthenticateField;
            }
            set {
                if ((this.AuthenticateField.Equals(value) != true)) {
                    this.AuthenticateField = value;
                    this.RaisePropertyChanged("Authenticate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumAuthorization Authorization {
            get {
                return this.AuthorizationField;
            }
            set {
                if ((this.AuthorizationField.Equals(value) != true)) {
                    this.AuthorizationField = value;
                    this.RaisePropertyChanged("Authorization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumAuthenticate", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumAuthenticate : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LicenseException = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoLicenseRight = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Logged = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongLoginOrPassword = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidProfileRight = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumAuthorization", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumAuthorization : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoReadOrWrite = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadAndWrite = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTODetailedAbnormalConsumption", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTODetailedAbnormalConsumption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTime1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTime2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Value1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Value2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime1 {
            get {
                return this.DateTime1Field;
            }
            set {
                if ((this.DateTime1Field.Equals(value) != true)) {
                    this.DateTime1Field = value;
                    this.RaisePropertyChanged("DateTime1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime2 {
            get {
                return this.DateTime2Field;
            }
            set {
                if ((this.DateTime2Field.Equals(value) != true)) {
                    this.DateTime2Field = value;
                    this.RaisePropertyChanged("DateTime2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value1 {
            get {
                return this.Value1Field;
            }
            set {
                if ((this.Value1Field.Equals(value) != true)) {
                    this.Value1Field = value;
                    this.RaisePropertyChanged("Value1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value2 {
            get {
                return this.Value2Field;
            }
            set {
                if ((this.Value2Field.Equals(value) != true)) {
                    this.Value2Field = value;
                    this.RaisePropertyChanged("Value2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variation {
            get {
                return this.VariationField;
            }
            set {
                if ((object.ReferenceEquals(this.VariationField, value) != true)) {
                    this.VariationField = value;
                    this.RaisePropertyChanged("Variation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumMeasuresResponse", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumMeasuresResponse : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidRequest = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownMeterId = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerUnavailableForLogin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidLoadProfile = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoMeasuresForChannelAndPeriod = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoError = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOPhaseIsolationVoltage", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOPhaseIsolationVoltage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODetailedIsolationVoltage[] DetailedIsolationVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessagErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhaseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODetailedIsolationVoltage[] DetailedIsolationVoltage {
            get {
                return this.DetailedIsolationVoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailedIsolationVoltageField, value) != true)) {
                    this.DetailedIsolationVoltageField = value;
                    this.RaisePropertyChanged("DetailedIsolationVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessagError {
            get {
                return this.MessagErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagErrorField, value) != true)) {
                    this.MessagErrorField = value;
                    this.RaisePropertyChanged("MessagError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phase {
            get {
                return this.PhaseField;
            }
            set {
                if ((this.PhaseField.Equals(value) != true)) {
                    this.PhaseField = value;
                    this.RaisePropertyChanged("Phase");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTODetailedIsolationVoltage", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTODetailedIsolationVoltage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeIsolationVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeIsolationVoltage {
            get {
                return this.DateTimeIsolationVoltageField;
            }
            set {
                if ((this.DateTimeIsolationVoltageField.Equals(value) != true)) {
                    this.DateTimeIsolationVoltageField = value;
                    this.RaisePropertyChanged("DateTimeIsolationVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal I {
            get {
                return this.IField;
            }
            set {
                if ((this.IField.Equals(value) != true)) {
                    this.IField = value;
                    this.RaisePropertyChanged("I");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal U {
            get {
                return this.UField;
            }
            set {
                if ((this.UField.Equals(value) != true)) {
                    this.UField = value;
                    this.RaisePropertyChanged("U");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumWebServiceReturnCode", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumWebServiceReturnCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectField = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseAccessRejected = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryAlreadyPresent = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownError = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerUnknown = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterUnknown = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterGroupUnknown = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PortableTerminalUnknown = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongPassword = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirmwareVersionFormatError = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterTypeRejected = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumberAlreadyUsedForThisCustomer = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidIpAddress = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidIpPortValue = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPhysicalAddress = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConnectionTypeRejected = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidConnectionId = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterDeviceAddressNotValid = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhoneNumberNotValid = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerNameAlreadyUsed = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidEmailAddress = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NameNotValid = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterAlreadyAssociatedWithThisMeterGroup = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterWithThisCustomerCantBeAddedToThisMeterGroup = 24,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOCity", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOCity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOProductionType", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOProductionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionTypeCategory ProductionTypeCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductionTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductionTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProductionTypeObsoleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductionTypeRatioSameAsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProductionTypeShowableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionTypeCategory ProductionTypeCategory {
            get {
                return this.ProductionTypeCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionTypeCategoryField, value) != true)) {
                    this.ProductionTypeCategoryField = value;
                    this.RaisePropertyChanged("ProductionTypeCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductionTypeId {
            get {
                return this.ProductionTypeIdField;
            }
            set {
                if ((this.ProductionTypeIdField.Equals(value) != true)) {
                    this.ProductionTypeIdField = value;
                    this.RaisePropertyChanged("ProductionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductionTypeName {
            get {
                return this.ProductionTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionTypeNameField, value) != true)) {
                    this.ProductionTypeNameField = value;
                    this.RaisePropertyChanged("ProductionTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProductionTypeObsolete {
            get {
                return this.ProductionTypeObsoleteField;
            }
            set {
                if ((this.ProductionTypeObsoleteField.Equals(value) != true)) {
                    this.ProductionTypeObsoleteField = value;
                    this.RaisePropertyChanged("ProductionTypeObsolete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductionTypeRatioSameAs {
            get {
                return this.ProductionTypeRatioSameAsField;
            }
            set {
                if ((this.ProductionTypeRatioSameAsField.Equals(value) != true)) {
                    this.ProductionTypeRatioSameAsField = value;
                    this.RaisePropertyChanged("ProductionTypeRatioSameAs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProductionTypeShowable {
            get {
                return this.ProductionTypeShowableField;
            }
            set {
                if ((this.ProductionTypeShowableField.Equals(value) != true)) {
                    this.ProductionTypeShowableField = value;
                    this.RaisePropertyChanged("ProductionTypeShowable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOProduction", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOProduction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductionId {
            get {
                return this.ProductionIdField;
            }
            set {
                if ((this.ProductionIdField.Equals(value) != true)) {
                    this.ProductionIdField = value;
                    this.RaisePropertyChanged("ProductionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductionName {
            get {
                return this.ProductionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionNameField, value) != true)) {
                    this.ProductionNameField = value;
                    this.RaisePropertyChanged("ProductionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumConnection", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumConnection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Serial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Optic = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modem = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TcpIp = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TcpIpMediation = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TcpIpRegister = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HDLCOverTCP = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HDLCOverUDP = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumDisconnectStatus", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumDisconnectStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherErrorReading = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CosemErrorReading = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherErrorConnecting = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CosemErrorConnecting = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherErrorDisconnecting = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CosemErrorDisconnecting = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingRead = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingDisconnect = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PendingConnectAuthorization = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnableToDisconnect = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConnectAuthorizationDone = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disconnected = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connected = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatusUpdatedToConnected = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatusChangedToConnected = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnableToConnectAuthorization = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumWorkingMode", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumWorkingMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonOperational = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Operational = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MicroFailure = 192,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumMeterCurrent", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumMeterCurrent : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DC = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CT = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumMeterOrigin", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumMeterOrigin : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Meter = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VirtualMeterForSummation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VirtualMeterForDynamicSummation = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumMeter", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumMeter : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SL7000 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACE8000 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACE6000 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACE6000_664 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INDIGO = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACE7000_781 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Summation = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupMeterTypeAll = 2000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupMeterTypeACE = 2001,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOProductionTypeCategory", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOProductionTypeCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductionTypeCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductionTypeCategoryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductionTypeCategoryId {
            get {
                return this.ProductionTypeCategoryIdField;
            }
            set {
                if ((this.ProductionTypeCategoryIdField.Equals(value) != true)) {
                    this.ProductionTypeCategoryIdField = value;
                    this.RaisePropertyChanged("ProductionTypeCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductionTypeCategoryName {
            get {
                return this.ProductionTypeCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionTypeCategoryNameField, value) != true)) {
                    this.ProductionTypeCategoryNameField = value;
                    this.RaisePropertyChanged("ProductionTypeCategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumPortableTerminalType", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumPortableTerminalType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mobile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Notebook = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumMeterSummation", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumMeterSummation : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StaticSummation = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DynamicSummation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StaticOrDynamicSummation = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumDynamicSummationCriteria", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumDynamicSummationCriteria : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Customer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerGroup = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetworkPost = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetworkDeparture = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Push = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProviderType = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnergyRecordingFormat", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnergyRecordingFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Base2 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Base10 = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumUnit", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumUnit : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Week = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hour = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sec = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Degree = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DegreeCelsius = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quantity = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        m = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        mByS = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        m3 = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        m3N = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        m3ByH = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        m3NByh = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        m3ByD = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        m3NByD = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        L = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        kg = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        N = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nm = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pa = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        bar = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        J = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JH = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        W = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VA = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        var = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wh = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VAh = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        varh = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        A = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        C = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        V = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CBym = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        F = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ohm = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        rho = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wb = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        T = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABym = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        H = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hz = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rac = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rre = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rap = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        V2H = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        A2h = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        kgBys = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneByO = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DegreeKelvin = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneByV2h = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneByA2h = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        mConstant = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SameUnit = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherUnit = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoUnit = 255,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumChannelWorkingMode", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumChannelWorkingMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Absolute = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Averaging = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cumulative = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumEvent", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumEvent : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimatingEnd = -5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimatingBegin = -4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownStatus = -3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoMeasureEnd = -2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoMeasureBegin = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartOfMeasurement = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PowerFailure = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClockSetting = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalClockSynchro = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DST = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WatchDogReset = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumEOBExcessMode", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumEOBExcessMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoManagement = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfIntegrationPeriod = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RisingValue = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Projection = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumEOBMaxMode", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumEOBMaxMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxDemandMode = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxRequestMode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxExcessMode = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumValueType", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumValueType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantaneousPower = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantaneousFactor = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantaneousRMS = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantaneousNeutral = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantaneousPhase = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EOBExcessLimit = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EOBExcessDuration = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EOBExcessMagnitude = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EOBExcessOver = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfBillingGlobal = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfBillingTotal = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfBillingRate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfBillingMax = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EndOfBillingRMSMax = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoltageQualitySummaryMinDuration = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoltageQualitySummaryMaxDuration = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoltageQualityHistoryDuration = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoltageQualityHistoryMagnitude = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantaneousTHD = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THDDefectHistoryDuration = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THDDefectHistoryCurrent = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THDDefectHistoryVoltage = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndigoMeterStatus = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantaneousTotal = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InstantaneousRate = 25,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumWaveformAlgorithm", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumWaveformAlgorithm : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANSI = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IEC61000 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumVoltageQuality", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumVoltageQuality : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoltageSwells = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoltageSags = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VoltageCuts = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumVoltageQualityTHDDefectHistory", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumVoltageQualityTHDDefectHistory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Current = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voltage = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOPushDecisionHelper", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOPushDecisionHelper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasureEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] MeterIdentifierArrayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasureEnd {
            get {
                return this.MeasureEndField;
            }
            set {
                if ((this.MeasureEndField.Equals(value) != true)) {
                    this.MeasureEndField = value;
                    this.RaisePropertyChanged("MeasureEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] MeterIdentifierArray {
            get {
                return this.MeterIdentifierArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterIdentifierArrayField, value) != true)) {
                    this.MeterIdentifierArrayField = value;
                    this.RaisePropertyChanged("MeterIdentifierArray");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumMeterConnection", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumMeterConnection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Serial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Optic = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modem = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TcpIp = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TcpIpMediation = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TcpIpRegister = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HDLCOverTCP = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HDLCOverUDP = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PortableTerminal = 99,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTampering", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOTampering : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CTVTRatioProgrammingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CurrentReversalNumberPhase1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CurrentReversalNumberPhase2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort CurrentReversalNumberPhase3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NumberOfCoverOpeningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NumberOfDayProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NumberOfIndexChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NumberOfMeterHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NumberOfSeasonChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NumberOfUserConnectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TamperingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CTVTRatioProgrammingNumber {
            get {
                return this.CTVTRatioProgrammingNumberField;
            }
            set {
                if ((this.CTVTRatioProgrammingNumberField.Equals(value) != true)) {
                    this.CTVTRatioProgrammingNumberField = value;
                    this.RaisePropertyChanged("CTVTRatioProgrammingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CurrentReversalNumberPhase1 {
            get {
                return this.CurrentReversalNumberPhase1Field;
            }
            set {
                if ((this.CurrentReversalNumberPhase1Field.Equals(value) != true)) {
                    this.CurrentReversalNumberPhase1Field = value;
                    this.RaisePropertyChanged("CurrentReversalNumberPhase1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CurrentReversalNumberPhase2 {
            get {
                return this.CurrentReversalNumberPhase2Field;
            }
            set {
                if ((this.CurrentReversalNumberPhase2Field.Equals(value) != true)) {
                    this.CurrentReversalNumberPhase2Field = value;
                    this.RaisePropertyChanged("CurrentReversalNumberPhase2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort CurrentReversalNumberPhase3 {
            get {
                return this.CurrentReversalNumberPhase3Field;
            }
            set {
                if ((this.CurrentReversalNumberPhase3Field.Equals(value) != true)) {
                    this.CurrentReversalNumberPhase3Field = value;
                    this.RaisePropertyChanged("CurrentReversalNumberPhase3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort NumberOfCoverOpening {
            get {
                return this.NumberOfCoverOpeningField;
            }
            set {
                if ((this.NumberOfCoverOpeningField.Equals(value) != true)) {
                    this.NumberOfCoverOpeningField = value;
                    this.RaisePropertyChanged("NumberOfCoverOpening");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort NumberOfDayProfile {
            get {
                return this.NumberOfDayProfileField;
            }
            set {
                if ((this.NumberOfDayProfileField.Equals(value) != true)) {
                    this.NumberOfDayProfileField = value;
                    this.RaisePropertyChanged("NumberOfDayProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort NumberOfIndexChange {
            get {
                return this.NumberOfIndexChangeField;
            }
            set {
                if ((this.NumberOfIndexChangeField.Equals(value) != true)) {
                    this.NumberOfIndexChangeField = value;
                    this.RaisePropertyChanged("NumberOfIndexChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort NumberOfMeterHistory {
            get {
                return this.NumberOfMeterHistoryField;
            }
            set {
                if ((this.NumberOfMeterHistoryField.Equals(value) != true)) {
                    this.NumberOfMeterHistoryField = value;
                    this.RaisePropertyChanged("NumberOfMeterHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort NumberOfSeasonChange {
            get {
                return this.NumberOfSeasonChangeField;
            }
            set {
                if ((this.NumberOfSeasonChangeField.Equals(value) != true)) {
                    this.NumberOfSeasonChangeField = value;
                    this.RaisePropertyChanged("NumberOfSeasonChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort NumberOfUserConnections {
            get {
                return this.NumberOfUserConnectionsField;
            }
            set {
                if ((this.NumberOfUserConnectionsField.Equals(value) != true)) {
                    this.NumberOfUserConnectionsField = value;
                    this.RaisePropertyChanged("NumberOfUserConnections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TamperingDate {
            get {
                return this.TamperingDateField;
            }
            set {
                if ((this.TamperingDateField.Equals(value) != true)) {
                    this.TamperingDateField = value;
                    this.RaisePropertyChanged("TamperingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTamperingUserConnections", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOTamperingUserConnections : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaptureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ChannelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort LogBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingUserConnectionsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaptureTime {
            get {
                return this.CaptureTimeField;
            }
            set {
                if ((this.CaptureTimeField.Equals(value) != true)) {
                    this.CaptureTimeField = value;
                    this.RaisePropertyChanged("CaptureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ChannelId {
            get {
                return this.ChannelIdField;
            }
            set {
                if ((this.ChannelIdField.Equals(value) != true)) {
                    this.ChannelIdField = value;
                    this.RaisePropertyChanged("ChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ClientType {
            get {
                return this.ClientTypeField;
            }
            set {
                if ((this.ClientTypeField.Equals(value) != true)) {
                    this.ClientTypeField = value;
                    this.RaisePropertyChanged("ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort LogBookId {
            get {
                return this.LogBookIdField;
            }
            set {
                if ((this.LogBookIdField.Equals(value) != true)) {
                    this.LogBookIdField = value;
                    this.RaisePropertyChanged("LogBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingUserConnectionsId {
            get {
                return this.TamperingUserConnectionsIdField;
            }
            set {
                if ((this.TamperingUserConnectionsIdField.Equals(value) != true)) {
                    this.TamperingUserConnectionsIdField = value;
                    this.RaisePropertyChanged("TamperingUserConnectionsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTamperingCoverOpening", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOTamperingCoverOpening : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaptureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort LogBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte ScalerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingCoverOpeningIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaptureTime {
            get {
                return this.CaptureTimeField;
            }
            set {
                if ((this.CaptureTimeField.Equals(value) != true)) {
                    this.CaptureTimeField = value;
                    this.RaisePropertyChanged("CaptureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort LogBookId {
            get {
                return this.LogBookIdField;
            }
            set {
                if ((this.LogBookIdField.Equals(value) != true)) {
                    this.LogBookIdField = value;
                    this.RaisePropertyChanged("LogBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Scaler {
            get {
                return this.ScalerField;
            }
            set {
                if ((this.ScalerField.Equals(value) != true)) {
                    this.ScalerField = value;
                    this.RaisePropertyChanged("Scaler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingCoverOpeningId {
            get {
                return this.TamperingCoverOpeningIdField;
            }
            set {
                if ((this.TamperingCoverOpeningIdField.Equals(value) != true)) {
                    this.TamperingCoverOpeningIdField = value;
                    this.RaisePropertyChanged("TamperingCoverOpeningId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((this.UnitField.Equals(value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTamperingCurrentReversal", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOTamperingCurrentReversal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaptureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort LogBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte PhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingCurrentReversalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaptureTime {
            get {
                return this.CaptureTimeField;
            }
            set {
                if ((this.CaptureTimeField.Equals(value) != true)) {
                    this.CaptureTimeField = value;
                    this.RaisePropertyChanged("CaptureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort LogBookId {
            get {
                return this.LogBookIdField;
            }
            set {
                if ((this.LogBookIdField.Equals(value) != true)) {
                    this.LogBookIdField = value;
                    this.RaisePropertyChanged("LogBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Phase {
            get {
                return this.PhaseField;
            }
            set {
                if ((this.PhaseField.Equals(value) != true)) {
                    this.PhaseField = value;
                    this.RaisePropertyChanged("Phase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingCurrentReversalId {
            get {
                return this.TamperingCurrentReversalIdField;
            }
            set {
                if ((this.TamperingCurrentReversalIdField.Equals(value) != true)) {
                    this.TamperingCurrentReversalIdField = value;
                    this.RaisePropertyChanged("TamperingCurrentReversalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTamperingCTVTRatioProgramming", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOTamperingCTVTRatioProgramming : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint CTDenominatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint CTNumeratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaptureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort LogBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ProgrammingSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingCTVTRatioProgrammingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint VTDenominatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint VTNumeratorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint CTDenominator {
            get {
                return this.CTDenominatorField;
            }
            set {
                if ((this.CTDenominatorField.Equals(value) != true)) {
                    this.CTDenominatorField = value;
                    this.RaisePropertyChanged("CTDenominator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint CTNumerator {
            get {
                return this.CTNumeratorField;
            }
            set {
                if ((this.CTNumeratorField.Equals(value) != true)) {
                    this.CTNumeratorField = value;
                    this.RaisePropertyChanged("CTNumerator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaptureTime {
            get {
                return this.CaptureTimeField;
            }
            set {
                if ((this.CaptureTimeField.Equals(value) != true)) {
                    this.CaptureTimeField = value;
                    this.RaisePropertyChanged("CaptureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort LogBookId {
            get {
                return this.LogBookIdField;
            }
            set {
                if ((this.LogBookIdField.Equals(value) != true)) {
                    this.LogBookIdField = value;
                    this.RaisePropertyChanged("LogBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ProgrammingSource {
            get {
                return this.ProgrammingSourceField;
            }
            set {
                if ((this.ProgrammingSourceField.Equals(value) != true)) {
                    this.ProgrammingSourceField = value;
                    this.RaisePropertyChanged("ProgrammingSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingCTVTRatioProgrammingId {
            get {
                return this.TamperingCTVTRatioProgrammingIdField;
            }
            set {
                if ((this.TamperingCTVTRatioProgrammingIdField.Equals(value) != true)) {
                    this.TamperingCTVTRatioProgrammingIdField = value;
                    this.RaisePropertyChanged("TamperingCTVTRatioProgrammingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint VTDenominator {
            get {
                return this.VTDenominatorField;
            }
            set {
                if ((this.VTDenominatorField.Equals(value) != true)) {
                    this.VTDenominatorField = value;
                    this.RaisePropertyChanged("VTDenominator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint VTNumerator {
            get {
                return this.VTNumeratorField;
            }
            set {
                if ((this.VTNumeratorField.Equals(value) != true)) {
                    this.VTNumeratorField = value;
                    this.RaisePropertyChanged("VTNumerator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTamperingSeason", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOTamperingSeason : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaptureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort LogBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint SeasonNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingSeasonIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaptureTime {
            get {
                return this.CaptureTimeField;
            }
            set {
                if ((this.CaptureTimeField.Equals(value) != true)) {
                    this.CaptureTimeField = value;
                    this.RaisePropertyChanged("CaptureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort LogBookId {
            get {
                return this.LogBookIdField;
            }
            set {
                if ((this.LogBookIdField.Equals(value) != true)) {
                    this.LogBookIdField = value;
                    this.RaisePropertyChanged("LogBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint SeasonNumber {
            get {
                return this.SeasonNumberField;
            }
            set {
                if ((this.SeasonNumberField.Equals(value) != true)) {
                    this.SeasonNumberField = value;
                    this.RaisePropertyChanged("SeasonNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingSeasonId {
            get {
                return this.TamperingSeasonIdField;
            }
            set {
                if ((this.TamperingSeasonIdField.Equals(value) != true)) {
                    this.TamperingSeasonIdField = value;
                    this.RaisePropertyChanged("TamperingSeasonId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTamperingDayProfile", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOTamperingDayProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaptureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint DayProfileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort LogBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingDayProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaptureTime {
            get {
                return this.CaptureTimeField;
            }
            set {
                if ((this.CaptureTimeField.Equals(value) != true)) {
                    this.CaptureTimeField = value;
                    this.RaisePropertyChanged("CaptureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint DayProfileNumber {
            get {
                return this.DayProfileNumberField;
            }
            set {
                if ((this.DayProfileNumberField.Equals(value) != true)) {
                    this.DayProfileNumberField = value;
                    this.RaisePropertyChanged("DayProfileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort LogBookId {
            get {
                return this.LogBookIdField;
            }
            set {
                if ((this.LogBookIdField.Equals(value) != true)) {
                    this.LogBookIdField = value;
                    this.RaisePropertyChanged("LogBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingDayProfileId {
            get {
                return this.TamperingDayProfileIdField;
            }
            set {
                if ((this.TamperingDayProfileIdField.Equals(value) != true)) {
                    this.TamperingDayProfileIdField = value;
                    this.RaisePropertyChanged("TamperingDayProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOTamperingIndex", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOTamperingIndex : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaptureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint IndexNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort LogBookIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIndexIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaptureTime {
            get {
                return this.CaptureTimeField;
            }
            set {
                if ((this.CaptureTimeField.Equals(value) != true)) {
                    this.CaptureTimeField = value;
                    this.RaisePropertyChanged("CaptureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint IndexNumber {
            get {
                return this.IndexNumberField;
            }
            set {
                if ((this.IndexNumberField.Equals(value) != true)) {
                    this.IndexNumberField = value;
                    this.RaisePropertyChanged("IndexNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort LogBookId {
            get {
                return this.LogBookIdField;
            }
            set {
                if ((this.LogBookIdField.Equals(value) != true)) {
                    this.LogBookIdField = value;
                    this.RaisePropertyChanged("LogBookId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingIndexId {
            get {
                return this.TamperingIndexIdField;
            }
            set {
                if ((this.TamperingIndexIdField.Equals(value) != true)) {
                    this.TamperingIndexIdField = value;
                    this.RaisePropertyChanged("TamperingIndexId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeterHistory", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeterHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CaptureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterHistoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TamperingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisibleStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CaptureTime {
            get {
                return this.CaptureTimeField;
            }
            set {
                if ((this.CaptureTimeField.Equals(value) != true)) {
                    this.CaptureTimeField = value;
                    this.RaisePropertyChanged("CaptureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterHistoryId {
            get {
                return this.MeterHistoryIdField;
            }
            set {
                if ((this.MeterHistoryIdField.Equals(value) != true)) {
                    this.MeterHistoryIdField = value;
                    this.RaisePropertyChanged("MeterHistoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TamperingId {
            get {
                return this.TamperingIdField;
            }
            set {
                if ((this.TamperingIdField.Equals(value) != true)) {
                    this.TamperingIdField = value;
                    this.RaisePropertyChanged("TamperingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisibleString {
            get {
                return this.VisibleStringField;
            }
            set {
                if ((object.ReferenceEquals(this.VisibleStringField, value) != true)) {
                    this.VisibleStringField = value;
                    this.RaisePropertyChanged("VisibleString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOScheduler", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOScheduler : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CosemTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExecutedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskFrequency FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FrequencyNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterSummationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortableTerminalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumPublish PublishTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestrictionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScheduleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SchedulerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTask TaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Try1MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Try1SecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskState Try1StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Try1ThreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Try1TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Try2MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Try2SecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskState Try2StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Try2ThreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Try2TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Try3MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Try3SecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskState Try3StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Try3ThreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Try3TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TryTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CosemText {
            get {
                return this.CosemTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CosemTextField, value) != true)) {
                    this.CosemTextField = value;
                    this.RaisePropertyChanged("CosemText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataId {
            get {
                return this.DataIdField;
            }
            set {
                if ((this.DataIdField.Equals(value) != true)) {
                    this.DataIdField = value;
                    this.RaisePropertyChanged("DataId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Executed {
            get {
                return this.ExecutedField;
            }
            set {
                if ((this.ExecutedField.Equals(value) != true)) {
                    this.ExecutedField = value;
                    this.RaisePropertyChanged("Executed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskFrequency Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrequencyN {
            get {
                return this.FrequencyNField;
            }
            set {
                if ((this.FrequencyNField.Equals(value) != true)) {
                    this.FrequencyNField = value;
                    this.RaisePropertyChanged("FrequencyN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InitTime {
            get {
                return this.InitTimeField;
            }
            set {
                if ((this.InitTimeField.Equals(value) != true)) {
                    this.InitTimeField = value;
                    this.RaisePropertyChanged("InitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterSummationId {
            get {
                return this.MeterSummationIdField;
            }
            set {
                if ((this.MeterSummationIdField.Equals(value) != true)) {
                    this.MeterSummationIdField = value;
                    this.RaisePropertyChanged("MeterSummationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PortableTerminalId {
            get {
                return this.PortableTerminalIdField;
            }
            set {
                if ((this.PortableTerminalIdField.Equals(value) != true)) {
                    this.PortableTerminalIdField = value;
                    this.RaisePropertyChanged("PortableTerminalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumPublish PublishType {
            get {
                return this.PublishTypeField;
            }
            set {
                if ((this.PublishTypeField.Equals(value) != true)) {
                    this.PublishTypeField = value;
                    this.RaisePropertyChanged("PublishType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestrictionTime {
            get {
                return this.RestrictionTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.RestrictionTimeField, value) != true)) {
                    this.RestrictionTimeField = value;
                    this.RaisePropertyChanged("RestrictionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleId {
            get {
                return this.ScheduleIdField;
            }
            set {
                if ((this.ScheduleIdField.Equals(value) != true)) {
                    this.ScheduleIdField = value;
                    this.RaisePropertyChanged("ScheduleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SchedulerId {
            get {
                return this.SchedulerIdField;
            }
            set {
                if ((this.SchedulerIdField.Equals(value) != true)) {
                    this.SchedulerIdField = value;
                    this.RaisePropertyChanged("SchedulerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTask Task {
            get {
                return this.TaskField;
            }
            set {
                if ((this.TaskField.Equals(value) != true)) {
                    this.TaskField = value;
                    this.RaisePropertyChanged("Task");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Try1Message {
            get {
                return this.Try1MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.Try1MessageField, value) != true)) {
                    this.Try1MessageField = value;
                    this.RaisePropertyChanged("Try1Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Try1Seconds {
            get {
                return this.Try1SecondsField;
            }
            set {
                if ((this.Try1SecondsField.Equals(value) != true)) {
                    this.Try1SecondsField = value;
                    this.RaisePropertyChanged("Try1Seconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskState Try1State {
            get {
                return this.Try1StateField;
            }
            set {
                if ((this.Try1StateField.Equals(value) != true)) {
                    this.Try1StateField = value;
                    this.RaisePropertyChanged("Try1State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Try1Thread {
            get {
                return this.Try1ThreadField;
            }
            set {
                if ((this.Try1ThreadField.Equals(value) != true)) {
                    this.Try1ThreadField = value;
                    this.RaisePropertyChanged("Try1Thread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Try1Time {
            get {
                return this.Try1TimeField;
            }
            set {
                if ((this.Try1TimeField.Equals(value) != true)) {
                    this.Try1TimeField = value;
                    this.RaisePropertyChanged("Try1Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Try2Message {
            get {
                return this.Try2MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.Try2MessageField, value) != true)) {
                    this.Try2MessageField = value;
                    this.RaisePropertyChanged("Try2Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Try2Seconds {
            get {
                return this.Try2SecondsField;
            }
            set {
                if ((this.Try2SecondsField.Equals(value) != true)) {
                    this.Try2SecondsField = value;
                    this.RaisePropertyChanged("Try2Seconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskState Try2State {
            get {
                return this.Try2StateField;
            }
            set {
                if ((this.Try2StateField.Equals(value) != true)) {
                    this.Try2StateField = value;
                    this.RaisePropertyChanged("Try2State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Try2Thread {
            get {
                return this.Try2ThreadField;
            }
            set {
                if ((this.Try2ThreadField.Equals(value) != true)) {
                    this.Try2ThreadField = value;
                    this.RaisePropertyChanged("Try2Thread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Try2Time {
            get {
                return this.Try2TimeField;
            }
            set {
                if ((this.Try2TimeField.Equals(value) != true)) {
                    this.Try2TimeField = value;
                    this.RaisePropertyChanged("Try2Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Try3Message {
            get {
                return this.Try3MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.Try3MessageField, value) != true)) {
                    this.Try3MessageField = value;
                    this.RaisePropertyChanged("Try3Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Try3Seconds {
            get {
                return this.Try3SecondsField;
            }
            set {
                if ((this.Try3SecondsField.Equals(value) != true)) {
                    this.Try3SecondsField = value;
                    this.RaisePropertyChanged("Try3Seconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumTaskState Try3State {
            get {
                return this.Try3StateField;
            }
            set {
                if ((this.Try3StateField.Equals(value) != true)) {
                    this.Try3StateField = value;
                    this.RaisePropertyChanged("Try3State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Try3Thread {
            get {
                return this.Try3ThreadField;
            }
            set {
                if ((this.Try3ThreadField.Equals(value) != true)) {
                    this.Try3ThreadField = value;
                    this.RaisePropertyChanged("Try3Thread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Try3Time {
            get {
                return this.Try3TimeField;
            }
            set {
                if ((this.Try3TimeField.Equals(value) != true)) {
                    this.Try3TimeField = value;
                    this.RaisePropertyChanged("Try3Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TryTime {
            get {
                return this.TryTimeField;
            }
            set {
                if ((this.TryTimeField.Equals(value) != true)) {
                    this.TryTimeField = value;
                    this.RaisePropertyChanged("TryTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumTaskFrequency", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumTaskFrequency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        One = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hour = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hours6 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hours12 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Week = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumPublish", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumPublish : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FTP = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mail = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumTaskState", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumTaskState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wait = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Run = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOEnumTask", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    public enum DTOEnumTask : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nothing = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConnectionTest = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadLoadProfile = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadLogBook = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadEOB = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadInstantaneous = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadStatusWord = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadVoltageQuality = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadTampering = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadWaveform = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadIndigoMeterStatus = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadDetectingAbnormalConsumption = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DownloadDetectingIsolationVoltage = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeSet = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResetEOB = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartMeasurement = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfigPrograming = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangePasswordLaboratory = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckConfig = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportLoadProfile = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportLogBook = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportEOB = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportInstantaneous = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportStatusWord = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportVoltageQuality = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportTampering = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportWaveform = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportDetectingAbnormalConsumption = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExportDetectingIsolationVoltage = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendSMSAlert = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendReports = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseBackup = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatabaseRestore = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileDelete = 33,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOCustomerGroup", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOCustomerGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerIdentifier[] CustomerListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerGroupId {
            get {
                return this.CustomerGroupIdField;
            }
            set {
                if ((this.CustomerGroupIdField.Equals(value) != true)) {
                    this.CustomerGroupIdField = value;
                    this.RaisePropertyChanged("CustomerGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerGroupName {
            get {
                return this.CustomerGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerGroupNameField, value) != true)) {
                    this.CustomerGroupNameField = value;
                    this.RaisePropertyChanged("CustomerGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerIdentifier[] CustomerList {
            get {
                return this.CustomerListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerListField, value) != true)) {
                    this.CustomerListField = value;
                    this.RaisePropertyChanged("CustomerList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTONetworkLevel", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTONetworkLevel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkLevelIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkLevelId {
            get {
                return this.NetworkLevelIdField;
            }
            set {
                if ((this.NetworkLevelIdField.Equals(value) != true)) {
                    this.NetworkLevelIdField = value;
                    this.RaisePropertyChanged("NetworkLevelId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTONetworkPost", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTONetworkPost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCity CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPSLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GPSLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkArrival[] NetworkArrivalListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkDeparture[] NetworkDepartureListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkLevel NetworkLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkPostIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCity City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPSLatitude {
            get {
                return this.GPSLatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSLatitudeField, value) != true)) {
                    this.GPSLatitudeField = value;
                    this.RaisePropertyChanged("GPSLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPSLongitude {
            get {
                return this.GPSLongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSLongitudeField, value) != true)) {
                    this.GPSLongitudeField = value;
                    this.RaisePropertyChanged("GPSLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkArrival[] NetworkArrivalList {
            get {
                return this.NetworkArrivalListField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkArrivalListField, value) != true)) {
                    this.NetworkArrivalListField = value;
                    this.RaisePropertyChanged("NetworkArrivalList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkDeparture[] NetworkDepartureList {
            get {
                return this.NetworkDepartureListField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkDepartureListField, value) != true)) {
                    this.NetworkDepartureListField = value;
                    this.RaisePropertyChanged("NetworkDepartureList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkLevel NetworkLevel {
            get {
                return this.NetworkLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkLevelField, value) != true)) {
                    this.NetworkLevelField = value;
                    this.RaisePropertyChanged("NetworkLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkPostId {
            get {
                return this.NetworkPostIdField;
            }
            set {
                if ((this.NetworkPostIdField.Equals(value) != true)) {
                    this.NetworkPostIdField = value;
                    this.RaisePropertyChanged("NetworkPostId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTONetworkArrival", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTONetworkArrival : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkArrivalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkDepartureIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkPostIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkArrivalId {
            get {
                return this.NetworkArrivalIdField;
            }
            set {
                if ((this.NetworkArrivalIdField.Equals(value) != true)) {
                    this.NetworkArrivalIdField = value;
                    this.RaisePropertyChanged("NetworkArrivalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkDepartureId {
            get {
                return this.NetworkDepartureIdField;
            }
            set {
                if ((this.NetworkDepartureIdField.Equals(value) != true)) {
                    this.NetworkDepartureIdField = value;
                    this.RaisePropertyChanged("NetworkDepartureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkPostId {
            get {
                return this.NetworkPostIdField;
            }
            set {
                if ((this.NetworkPostIdField.Equals(value) != true)) {
                    this.NetworkPostIdField = value;
                    this.RaisePropertyChanged("NetworkPostId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTONetworkDeparture", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTONetworkDeparture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkDepartureIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetworkPostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PowerScalarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoltageScalarField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkDepartureId {
            get {
                return this.NetworkDepartureIdField;
            }
            set {
                if ((this.NetworkDepartureIdField.Equals(value) != true)) {
                    this.NetworkDepartureIdField = value;
                    this.RaisePropertyChanged("NetworkDepartureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetworkPostId {
            get {
                return this.NetworkPostIdField;
            }
            set {
                if ((this.NetworkPostIdField.Equals(value) != true)) {
                    this.NetworkPostIdField = value;
                    this.RaisePropertyChanged("NetworkPostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Power {
            get {
                return this.PowerField;
            }
            set {
                if ((this.PowerField.Equals(value) != true)) {
                    this.PowerField = value;
                    this.RaisePropertyChanged("Power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PowerScalar {
            get {
                return this.PowerScalarField;
            }
            set {
                if ((this.PowerScalarField.Equals(value) != true)) {
                    this.PowerScalarField = value;
                    this.RaisePropertyChanged("PowerScalar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Voltage {
            get {
                return this.VoltageField;
            }
            set {
                if ((this.VoltageField.Equals(value) != true)) {
                    this.VoltageField = value;
                    this.RaisePropertyChanged("Voltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoltageScalar {
            get {
                return this.VoltageScalarField;
            }
            set {
                if ((this.VoltageScalarField.Equals(value) != true)) {
                    this.VoltageScalarField = value;
                    this.RaisePropertyChanged("VoltageScalar");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeasure", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeasure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasureEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MeasureValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasureEnd {
            get {
                return this.MeasureEndField;
            }
            set {
                if ((this.MeasureEndField.Equals(value) != true)) {
                    this.MeasureEndField = value;
                    this.RaisePropertyChanged("MeasureEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MeasureValue {
            get {
                return this.MeasureValueField;
            }
            set {
                if ((this.MeasureValueField.Equals(value) != true)) {
                    this.MeasureValueField = value;
                    this.RaisePropertyChanged("MeasureValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTODetailedMeasure", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTODetailedMeasure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPushEstimatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasureEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PullMeasureValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> PushMeasureValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPushEstimated {
            get {
                return this.IsPushEstimatedField;
            }
            set {
                if ((this.IsPushEstimatedField.Equals(value) != true)) {
                    this.IsPushEstimatedField = value;
                    this.RaisePropertyChanged("IsPushEstimated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasureEnd {
            get {
                return this.MeasureEndField;
            }
            set {
                if ((this.MeasureEndField.Equals(value) != true)) {
                    this.MeasureEndField = value;
                    this.RaisePropertyChanged("MeasureEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PullMeasureValue {
            get {
                return this.PullMeasureValueField;
            }
            set {
                if ((this.PullMeasureValueField.Equals(value) != true)) {
                    this.PullMeasureValueField = value;
                    this.RaisePropertyChanged("PullMeasureValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> PushMeasureValue {
            get {
                return this.PushMeasureValueField;
            }
            set {
                if ((this.PushMeasureValueField.Equals(value) != true)) {
                    this.PushMeasureValueField = value;
                    this.RaisePropertyChanged("PushMeasureValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOMeasuresRequest", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOMeasuresRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChannelExcessEnergyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ChannelUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumChannelWorkingMode ChannelWorkingModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODetailedMeasure[] DetailedMeasureListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoadProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeasure[] MeasureListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeasuresResponse ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChannelExcessEnergy {
            get {
                return this.ChannelExcessEnergyField;
            }
            set {
                if ((this.ChannelExcessEnergyField.Equals(value) != true)) {
                    this.ChannelExcessEnergyField = value;
                    this.RaisePropertyChanged("ChannelExcessEnergy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelQuantity {
            get {
                return this.ChannelQuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelQuantityField, value) != true)) {
                    this.ChannelQuantityField = value;
                    this.RaisePropertyChanged("ChannelQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ChannelUnit {
            get {
                return this.ChannelUnitField;
            }
            set {
                if ((this.ChannelUnitField.Equals(value) != true)) {
                    this.ChannelUnitField = value;
                    this.RaisePropertyChanged("ChannelUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumChannelWorkingMode ChannelWorkingMode {
            get {
                return this.ChannelWorkingModeField;
            }
            set {
                if ((this.ChannelWorkingModeField.Equals(value) != true)) {
                    this.ChannelWorkingModeField = value;
                    this.RaisePropertyChanged("ChannelWorkingMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODetailedMeasure[] DetailedMeasureList {
            get {
                return this.DetailedMeasureListField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailedMeasureListField, value) != true)) {
                    this.DetailedMeasureListField = value;
                    this.RaisePropertyChanged("DetailedMeasureList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadProfileId {
            get {
                return this.LoadProfileIdField;
            }
            set {
                if ((this.LoadProfileIdField.Equals(value) != true)) {
                    this.LoadProfileIdField = value;
                    this.RaisePropertyChanged("LoadProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeasure[] MeasureList {
            get {
                return this.MeasureListField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasureListField, value) != true)) {
                    this.MeasureListField = value;
                    this.RaisePropertyChanged("MeasureList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterId {
            get {
                return this.MeterIdField;
            }
            set {
                if ((this.MeterIdField.Equals(value) != true)) {
                    this.MeterIdField = value;
                    this.RaisePropertyChanged("MeterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeasuresResponse Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((this.ResponseField.Equals(value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOPushLastRatio", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOPushLastRatio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstallLowSunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstallMainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstallOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstallSunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstallWindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstantLowSunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstantMainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstantOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstantSunField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstantWindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasureEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterEstimatedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PowerOverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RatioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstallLowSun {
            get {
                return this.InstallLowSunField;
            }
            set {
                if ((this.InstallLowSunField.Equals(value) != true)) {
                    this.InstallLowSunField = value;
                    this.RaisePropertyChanged("InstallLowSun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstallMain {
            get {
                return this.InstallMainField;
            }
            set {
                if ((this.InstallMainField.Equals(value) != true)) {
                    this.InstallMainField = value;
                    this.RaisePropertyChanged("InstallMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstallOther {
            get {
                return this.InstallOtherField;
            }
            set {
                if ((this.InstallOtherField.Equals(value) != true)) {
                    this.InstallOtherField = value;
                    this.RaisePropertyChanged("InstallOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstallSun {
            get {
                return this.InstallSunField;
            }
            set {
                if ((this.InstallSunField.Equals(value) != true)) {
                    this.InstallSunField = value;
                    this.RaisePropertyChanged("InstallSun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstallWind {
            get {
                return this.InstallWindField;
            }
            set {
                if ((this.InstallWindField.Equals(value) != true)) {
                    this.InstallWindField = value;
                    this.RaisePropertyChanged("InstallWind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstantLowSun {
            get {
                return this.InstantLowSunField;
            }
            set {
                if ((this.InstantLowSunField.Equals(value) != true)) {
                    this.InstantLowSunField = value;
                    this.RaisePropertyChanged("InstantLowSun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstantMain {
            get {
                return this.InstantMainField;
            }
            set {
                if ((this.InstantMainField.Equals(value) != true)) {
                    this.InstantMainField = value;
                    this.RaisePropertyChanged("InstantMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstantOther {
            get {
                return this.InstantOtherField;
            }
            set {
                if ((this.InstantOtherField.Equals(value) != true)) {
                    this.InstantOtherField = value;
                    this.RaisePropertyChanged("InstantOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstantSun {
            get {
                return this.InstantSunField;
            }
            set {
                if ((this.InstantSunField.Equals(value) != true)) {
                    this.InstantSunField = value;
                    this.RaisePropertyChanged("InstantSun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstantWind {
            get {
                return this.InstantWindField;
            }
            set {
                if ((this.InstantWindField.Equals(value) != true)) {
                    this.InstantWindField = value;
                    this.RaisePropertyChanged("InstantWind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasureEnd {
            get {
                return this.MeasureEndField;
            }
            set {
                if ((this.MeasureEndField.Equals(value) != true)) {
                    this.MeasureEndField = value;
                    this.RaisePropertyChanged("MeasureEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterCount {
            get {
                return this.MeterCountField;
            }
            set {
                if ((this.MeterCountField.Equals(value) != true)) {
                    this.MeterCountField = value;
                    this.RaisePropertyChanged("MeterCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterEstimatedCount {
            get {
                return this.MeterEstimatedCountField;
            }
            set {
                if ((this.MeterEstimatedCountField.Equals(value) != true)) {
                    this.MeterEstimatedCountField = value;
                    this.RaisePropertyChanged("MeterEstimatedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PowerOver {
            get {
                return this.PowerOverField;
            }
            set {
                if ((this.PowerOverField.Equals(value) != true)) {
                    this.PowerOverField = value;
                    this.RaisePropertyChanged("PowerOver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Ratio {
            get {
                return this.RatioField;
            }
            set {
                if ((this.RatioField.Equals(value) != true)) {
                    this.RatioField = value;
                    this.RaisePropertyChanged("Ratio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOLastPush", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOLastPush : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstimatedMeterCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastPushDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MeterCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OverThresholdPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPushProductionTypeRatio[] ProductionTypeRatioTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RatioTotalRandomProductionDivTotalProductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalLoosedPowerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstimatedMeterCount {
            get {
                return this.EstimatedMeterCountField;
            }
            set {
                if ((this.EstimatedMeterCountField.Equals(value) != true)) {
                    this.EstimatedMeterCountField = value;
                    this.RaisePropertyChanged("EstimatedMeterCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastPushDateTime {
            get {
                return this.LastPushDateTimeField;
            }
            set {
                if ((this.LastPushDateTimeField.Equals(value) != true)) {
                    this.LastPushDateTimeField = value;
                    this.RaisePropertyChanged("LastPushDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MeterCount {
            get {
                return this.MeterCountField;
            }
            set {
                if ((this.MeterCountField.Equals(value) != true)) {
                    this.MeterCountField = value;
                    this.RaisePropertyChanged("MeterCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OverThresholdPower {
            get {
                return this.OverThresholdPowerField;
            }
            set {
                if ((this.OverThresholdPowerField.Equals(value) != true)) {
                    this.OverThresholdPowerField = value;
                    this.RaisePropertyChanged("OverThresholdPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPushProductionTypeRatio[] ProductionTypeRatioTable {
            get {
                return this.ProductionTypeRatioTableField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionTypeRatioTableField, value) != true)) {
                    this.ProductionTypeRatioTableField = value;
                    this.RaisePropertyChanged("ProductionTypeRatioTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RatioTotalRandomProductionDivTotalProduction {
            get {
                return this.RatioTotalRandomProductionDivTotalProductionField;
            }
            set {
                if ((this.RatioTotalRandomProductionDivTotalProductionField.Equals(value) != true)) {
                    this.RatioTotalRandomProductionDivTotalProductionField = value;
                    this.RaisePropertyChanged("RatioTotalRandomProductionDivTotalProduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalLoosedPower {
            get {
                return this.TotalLoosedPowerField;
            }
            set {
                if ((this.TotalLoosedPowerField.Equals(value) != true)) {
                    this.TotalLoosedPowerField = value;
                    this.RaisePropertyChanged("TotalLoosedPower");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOPushProductionTypeRatio", Namespace="http://schemas.datacontract.org/2004/07/Itron.ACEVision.WS.DTO")]
    [System.SerializableAttribute()]
    public partial class DTOPushProductionTypeRatio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstantaneousEstimatedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InstantaneousMeasuredValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PowerTheoryValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PowerTheoryValueWithoutEstimatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionType ProductionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RatioEstimatedDivInstalledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RatioInstantaneousDivInstalledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RatioMeasuredDivInstalledWithoutEstimatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstantaneousEstimatedValue {
            get {
                return this.InstantaneousEstimatedValueField;
            }
            set {
                if ((this.InstantaneousEstimatedValueField.Equals(value) != true)) {
                    this.InstantaneousEstimatedValueField = value;
                    this.RaisePropertyChanged("InstantaneousEstimatedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InstantaneousMeasuredValue {
            get {
                return this.InstantaneousMeasuredValueField;
            }
            set {
                if ((this.InstantaneousMeasuredValueField.Equals(value) != true)) {
                    this.InstantaneousMeasuredValueField = value;
                    this.RaisePropertyChanged("InstantaneousMeasuredValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PowerTheoryValue {
            get {
                return this.PowerTheoryValueField;
            }
            set {
                if ((this.PowerTheoryValueField.Equals(value) != true)) {
                    this.PowerTheoryValueField = value;
                    this.RaisePropertyChanged("PowerTheoryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PowerTheoryValueWithoutEstimated {
            get {
                return this.PowerTheoryValueWithoutEstimatedField;
            }
            set {
                if ((this.PowerTheoryValueWithoutEstimatedField.Equals(value) != true)) {
                    this.PowerTheoryValueWithoutEstimatedField = value;
                    this.RaisePropertyChanged("PowerTheoryValueWithoutEstimated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionType ProductionType {
            get {
                return this.ProductionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductionTypeField, value) != true)) {
                    this.ProductionTypeField = value;
                    this.RaisePropertyChanged("ProductionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RatioEstimatedDivInstalled {
            get {
                return this.RatioEstimatedDivInstalledField;
            }
            set {
                if ((this.RatioEstimatedDivInstalledField.Equals(value) != true)) {
                    this.RatioEstimatedDivInstalledField = value;
                    this.RaisePropertyChanged("RatioEstimatedDivInstalled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RatioInstantaneousDivInstalled {
            get {
                return this.RatioInstantaneousDivInstalledField;
            }
            set {
                if ((this.RatioInstantaneousDivInstalledField.Equals(value) != true)) {
                    this.RatioInstantaneousDivInstalledField = value;
                    this.RaisePropertyChanged("RatioInstantaneousDivInstalled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RatioMeasuredDivInstalledWithoutEstimated {
            get {
                return this.RatioMeasuredDivInstalledWithoutEstimatedField;
            }
            set {
                if ((this.RatioMeasuredDivInstalledWithoutEstimatedField.Equals(value) != true)) {
                    this.RatioMeasuredDivInstalledWithoutEstimatedField = value;
                    this.RaisePropertyChanged("RatioMeasuredDivInstalledWithoutEstimated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.itron.com", ConfigurationName="SceReference_Itron.IContracts")]
    public interface IContracts {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getPushDecisionHelper", ReplyAction="http://www.itron.com/IContracts/getPushDecisionHelperResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPushDecisionHelper getPushDecisionHelper(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getCustomers", ReplyAction="http://www.itron.com/IContracts/getCustomersResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer[] getCustomers(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getCustomerById", ReplyAction="http://www.itron.com/IContracts/getCustomerByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer getCustomerById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getCustomersByName", ReplyAction="http://www.itron.com/IContracts/getCustomersByNameResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer[] getCustomersByName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getCustomersByAccountNumber", ReplyAction="http://www.itron.com/IContracts/getCustomersByAccountNumberResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer[] getCustomersByAccountNumber(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getCustomersByNameFilter", ReplyAction="http://www.itron.com/IContracts/getCustomersByNameFilterResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer[] getCustomersByNameFilter(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/addCustomer", ReplyAction="http://www.itron.com/IContracts/addCustomerResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOObjectCreationReturn addCustomer(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sName, string p_sAccountNumber, string p_sPhoneNumber, string p_sAddress, string p_sEmail, string p_sComments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/updateCustomerAccountNumber", ReplyAction="http://www.itron.com/IContracts/updateCustomerAccountNumberResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateCustomerAccountNumber(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCustomerId, string p_sNewAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/checkService", ReplyAction="http://www.itron.com/IContracts/checkServiceResponse")]
        void checkService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/authenticate", ReplyAction="http://www.itron.com/IContracts/authenticateResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth authenticate(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeters", ReplyAction="http://www.itron.com/IContracts/getMetersResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMeters(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByCustomerId", ReplyAction="http://www.itron.com/IContracts/getMetersByCustomerIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCustomerId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByCustomerName", ReplyAction="http://www.itron.com/IContracts/getMetersByCustomerNameResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCustomerName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByCustomerNameFilter", ReplyAction="http://www.itron.com/IContracts/getMetersByCustomerNameFilterResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCustomerNameFilter(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterById", ReplyAction="http://www.itron.com/IContracts/getMeterByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter getMeterById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersBySerialNumber", ReplyAction="http://www.itron.com/IContracts/getMetersBySerialNumberResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersBySerialNumber(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersBySerialNumberFilter", ReplyAction="http://www.itron.com/IContracts/getMetersBySerialNumberFilterResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersBySerialNumberFilter(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sSerialNumber, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByNetworkPostId", ReplyAction="http://www.itron.com/IContracts/getMetersByNetworkPostIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByNetworkPostId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByNetworkPostName", ReplyAction="http://www.itron.com/IContracts/getMetersByNetworkPostNameResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByNetworkPostName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sNetworkPostName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByNetworkDepartureId", ReplyAction="http://www.itron.com/IContracts/getMetersByNetworkDepartureIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByNetworkDepartureId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkDepartureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByNetworkDepartureName", ReplyAction="http://www.itron.com/IContracts/getMetersByNetworkDepartureNameResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByNetworkDepartureName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sNetworkDepartureName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByCityId", ReplyAction="http://www.itron.com/IContracts/getMetersByCityIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCityId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByCityName", ReplyAction="http://www.itron.com/IContracts/getMetersByCityNameResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCityName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCityName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByLocation", ReplyAction="http://www.itron.com/IContracts/getMetersByLocationResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByLocation(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sLocation, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByConnection", ReplyAction="http://www.itron.com/IContracts/getMetersByConnectionResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByConnection(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumConnection p_eConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMetersByIPMask", ReplyAction="http://www.itron.com/IContracts/getMetersByIPMaskResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByIPMask(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sIPMask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/addMeter", ReplyAction="http://www.itron.com/IContracts/addMeterResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOObjectCreationReturn addMeter(
                    ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, 
                    string p_sSerialNumber, 
                    int p_iCustomerId, 
                    string p_sAddress, 
                    string p_sLocation, 
                    Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeter p_oMeterType, 
                    string p_sFirmwareVersion, 
                    string p_sPassword, 
                    Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterConnection p_oConnectionType, 
                    int p_iPortableTerminal, 
                    string p_sIPAddress, 
                    int p_iIpClientPort, 
                    int p_iIpServerPort, 
                    int p_iPhysicalAddress, 
                    int p_iConnectionId, 
                    string p_sMeterDeviceAddress, 
                    string p_sPhoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/updateMeterCustomer", ReplyAction="http://www.itron.com/IContracts/updateMeterCustomerResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterCustomer(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/updateMeterPassword", ReplyAction="http://www.itron.com/IContracts/updateMeterPasswordResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterPassword(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, string p_sOldPassword, string p_sNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/updateMeterAddress", ReplyAction="http://www.itron.com/IContracts/updateMeterAddressResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterAddress(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, string p_sNewAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/updateMeterLocation", ReplyAction="http://www.itron.com/IContracts/updateMeterLocationResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterLocation(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, string p_sNewLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/updateMeterPortableTerminal", ReplyAction="http://www.itron.com/IContracts/updateMeterPortableTerminalResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterPortableTerminal(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iNewPortableTerminal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getAllPortableTerminals", ReplyAction="http://www.itron.com/IContracts/getAllPortableTerminalsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPortableTerminal[] getAllPortableTerminals(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getLoginInformation", ReplyAction="http://www.itron.com/IContracts/getLoginInformationResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogin getLoginInformation(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getAllLoginInformation", ReplyAction="http://www.itron.com/IContracts/getAllLoginInformationResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogin[] getAllLoginInformation(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getProductionTypeCategoryById", ReplyAction="http://www.itron.com/IContracts/getProductionTypeCategoryByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionTypeCategory getProductionTypeCategoryById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iProductTypeCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getProductionTypeCategories", ReplyAction="http://www.itron.com/IContracts/getProductionTypeCategoriesResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionTypeCategory[] getProductionTypeCategories(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getProductionTypeById", ReplyAction="http://www.itron.com/IContracts/getProductionTypeByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionType getProductionTypeById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iProductionTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getProductionTypes", ReplyAction="http://www.itron.com/IContracts/getProductionTypesResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionType[] getProductionTypes(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingByMeterId", ReplyAction="http://www.itron.com/IContracts/getTamperingByMeterIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTampering getTamperingByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingUserConnectionsByTamperingId", ReplyAction="http://www.itron.com/IContracts/getTamperingUserConnectionsByTamperingIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingUserConnections[] getTamperingUserConnectionsByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingCoverOpeningByTamperingId", ReplyAction="http://www.itron.com/IContracts/getTamperingCoverOpeningByTamperingIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingCoverOpening[] getTamperingCoverOpeningByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingCurrentReversalByTamperingId", ReplyAction="http://www.itron.com/IContracts/getTamperingCurrentReversalByTamperingIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingCurrentReversal[] getTamperingCurrentReversalByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingCTVTRatioProgrammingByTamperingId", ReplyAction="http://www.itron.com/IContracts/getTamperingCTVTRatioProgrammingByTamperingIdResp" +
            "onse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingCTVTRatioProgramming[] getTamperingCTVTRatioProgrammingByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingSeasonByTamperingId", ReplyAction="http://www.itron.com/IContracts/getTamperingSeasonByTamperingIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingSeason[] getTamperingSeasonByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingDayProfileByTamperingId", ReplyAction="http://www.itron.com/IContracts/getTamperingDayProfileByTamperingIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingDayProfile[] getTamperingDayProfileByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingIndexByTamperingId", ReplyAction="http://www.itron.com/IContracts/getTamperingIndexByTamperingIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingIndex[] getTamperingIndexByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getTamperingMeterHistoryByTamperingId", ReplyAction="http://www.itron.com/IContracts/getTamperingMeterHistoryByTamperingIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterHistory[] getTamperingMeterHistoryByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getScheduler", ReplyAction="http://www.itron.com/IContracts/getSchedulerResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getScheduler(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getSchedulerByMeterId", ReplyAction="http://www.itron.com/IContracts/getSchedulerByMeterIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getSchedulerByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getSchedulerByMeterIds", ReplyAction="http://www.itron.com/IContracts/getSchedulerByMeterIdsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getSchedulerByMeterIds(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int[] p_vMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getSchedulerByMessage", ReplyAction="http://www.itron.com/IContracts/getSchedulerByMessageResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getSchedulerByMessage(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sTryMessage, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getSchedulerByTry", ReplyAction="http://www.itron.com/IContracts/getSchedulerByTryResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getSchedulerByTry(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTry, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/setReScheduleTasks", ReplyAction="http://www.itron.com/IContracts/setReScheduleTasksResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] setReScheduleTasks(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getReportMeterStop", ReplyAction="http://www.itron.com/IContracts/getReportMeterStopResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterStop[] getReportMeterStop(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getReportCheckEnergy", ReplyAction="http://www.itron.com/IContracts/getReportCheckEnergyResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportCheckEnergy(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getReportCheckConfig", ReplyAction="http://www.itron.com/IContracts/getReportCheckConfigResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterCheckConfig[] getReportCheckConfig(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getReportTamperingCoverOpening", ReplyAction="http://www.itron.com/IContracts/getReportTamperingCoverOpeningResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportTamperingCoverOpening(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getReportTamperingMagnetSensor", ReplyAction="http://www.itron.com/IContracts/getReportTamperingMagnetSensorResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportTamperingMagnetSensor(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getReportTamperingPhaseCut", ReplyAction="http://www.itron.com/IContracts/getReportTamperingPhaseCutResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportTamperingPhaseCut(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getReportMonitor", ReplyAction="http://www.itron.com/IContracts/getReportMonitorResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportMonitor(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getCustomerGroups", ReplyAction="http://www.itron.com/IContracts/getCustomerGroupsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerGroup[] getCustomerGroups(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getCustomerGroupById", ReplyAction="http://www.itron.com/IContracts/getCustomerGroupByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerGroup getCustomerGroupById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCustomerGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getCustomerGroupsByName", ReplyAction="http://www.itron.com/IContracts/getCustomerGroupsByNameResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerGroup[] getCustomerGroupsByName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerGroupName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterGroups", ReplyAction="http://www.itron.com/IContracts/getMeterGroupsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterGroup[] getMeterGroups(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterGroupById", ReplyAction="http://www.itron.com/IContracts/getMeterGroupByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterGroup getMeterGroupById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterGroupsByName", ReplyAction="http://www.itron.com/IContracts/getMeterGroupsByNameResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterGroup[] getMeterGroupsByName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sMeterGroupName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/addMeterGroup", ReplyAction="http://www.itron.com/IContracts/addMeterGroupResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOObjectCreationReturn addMeterGroup(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sGroupName, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeter p_oMeterType, int p_iCustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/addMeterToMeterGroup", ReplyAction="http://www.itron.com/IContracts/addMeterToMeterGroupResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode addMeterToMeterGroup(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iMeterGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/updateMeterToMeterGroup", ReplyAction="http://www.itron.com/IContracts/updateMeterToMeterGroupResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterToMeterGroup(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int[] p_vMeterId, int p_iMeterGroupId, bool p_bResetGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getNetworkLevels", ReplyAction="http://www.itron.com/IContracts/getNetworkLevelsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkLevel[] getNetworkLevels(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getNetworkPostById", ReplyAction="http://www.itron.com/IContracts/getNetworkPostByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkPost getNetworkPostById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getNetworkPostsByLevel", ReplyAction="http://www.itron.com/IContracts/getNetworkPostsByLevelResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkPost[] getNetworkPostsByLevel(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkLevel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getNetworkPostAscendantsById", ReplyAction="http://www.itron.com/IContracts/getNetworkPostAscendantsByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkPost[] getNetworkPostAscendantsById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId, int p_iDepth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getNetworkPostDescendantsById", ReplyAction="http://www.itron.com/IContracts/getNetworkPostDescendantsByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkPost[] getNetworkPostDescendantsById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId, int p_iDepth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getNetworkDepartureById", ReplyAction="http://www.itron.com/IContracts/getNetworkDepartureByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkDeparture getNetworkDepartureById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkDepartureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterSummations", ReplyAction="http://www.itron.com/IContracts/getMeterSummationsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummations(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterSummationById", ReplyAction="http://www.itron.com/IContracts/getMeterSummationByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation getMeterSummationById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iSummationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterSummationsByName", ReplyAction="http://www.itron.com/IContracts/getMeterSummationsByNameResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterSummation p_eMeterSummationType, string p_sSummationName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterSummationsByCriteriaNetworkPostId", ReplyAction="http://www.itron.com/IContracts/getMeterSummationsByCriteriaNetworkPostIdResponse" +
            "")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByCriteriaNetworkPostId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterSummationsByCriteriaNetworkPostName", ReplyAction="http://www.itron.com/IContracts/getMeterSummationsByCriteriaNetworkPostNameRespon" +
            "se")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByCriteriaNetworkPostName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sNetworkPostName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterSummationsByCriteriaNetworkDepartureId", ReplyAction="http://www.itron.com/IContracts/getMeterSummationsByCriteriaNetworkDepartureIdRes" +
            "ponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByCriteriaNetworkDepartureId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkDepartureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeterSummationsByCriteriaNetworkDepartureName", ReplyAction="http://www.itron.com/IContracts/getMeterSummationsByCriteriaNetworkDepartureNameR" +
            "esponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByCriteriaNetworkDepartureName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sNetworkDepartureName, bool p_bExactSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getProductions", ReplyAction="http://www.itron.com/IContracts/getProductionsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProduction[] getProductions(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getProductionById", ReplyAction="http://www.itron.com/IContracts/getProductionByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProduction getProductionById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iProductionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getLoadProfilesByMeterId", ReplyAction="http://www.itron.com/IContracts/getLoadProfilesByMeterIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLoadProfile[] getLoadProfilesByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getLoadProfileConfigsByLoadProfileId", ReplyAction="http://www.itron.com/IContracts/getLoadProfileConfigsByLoadProfileIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLoadProfileConfig[] getLoadProfileConfigsByLoadProfileId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iLoadProfileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getChannelsFromLoadProfileConfigId", ReplyAction="http://www.itron.com/IContracts/getChannelsFromLoadProfileConfigIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOChannel[] getChannelsFromLoadProfileConfigId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iLoadProfileConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getChannelById", ReplyAction="http://www.itron.com/IContracts/getChannelByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOChannel getChannelById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iChannelId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getEventsByLoadProfileConfigId", ReplyAction="http://www.itron.com/IContracts/getEventsByLoadProfileConfigIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEvent[] getEventsByLoadProfileConfigId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iLoadProfileConfigId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getDetailedEventsByLoadProfileConfigId", ReplyAction="http://www.itron.com/IContracts/getDetailedEventsByLoadProfileConfigIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEvent[] getDetailedEventsByLoadProfileConfigId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iLoadProfileConfigId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getMeasuresByChannelId", ReplyAction="http://www.itron.com/IContracts/getMeasuresByChannelIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeasure[] getMeasuresByChannelId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iChannelId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getDetailedMeasuresByChannelId", ReplyAction="http://www.itron.com/IContracts/getDetailedMeasuresByChannelIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODetailedMeasure[] getDetailedMeasuresByChannelId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iChannelId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getEOBIDs", ReplyAction="http://www.itron.com/IContracts/getEOBIDsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBillingIdentifier[] getEOBIDs(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getEOBIDsByMeterId", ReplyAction="http://www.itron.com/IContracts/getEOBIDsByMeterIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBillingIdentifier[] getEOBIDsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getEOBById", ReplyAction="http://www.itron.com/IContracts/getEOBByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling getEOBById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iEndOfBillingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getEOBByMeterIdDate", ReplyAction="http://www.itron.com/IContracts/getEOBByMeterIdDateResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling getEOBByMeterIdDate(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getEOBs", ReplyAction="http://www.itron.com/IContracts/getEOBsResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling[] getEOBs(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getEOBsByMeterId", ReplyAction="http://www.itron.com/IContracts/getEOBsByMeterIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling[] getEOBsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getPersoEOBById", ReplyAction="http://www.itron.com/IContracts/getPersoEOBByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling getPersoEOBById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iEndOfBillingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getInstantaneousIdsByMeterId", ReplyAction="http://www.itron.com/IContracts/getInstantaneousIdsByMeterIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOInstantaneousIdentifier[] getInstantaneousIdsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getInstantaneousById", ReplyAction="http://www.itron.com/IContracts/getInstantaneousByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOInstantaneous getInstantaneousById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iInstantaneousId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getPersoInstantaneousById", ReplyAction="http://www.itron.com/IContracts/getPersoInstantaneousByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOInstantaneous getPersoInstantaneousById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iInstantaneousId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getStatusWordIdsByMeterId", ReplyAction="http://www.itron.com/IContracts/getStatusWordIdsByMeterIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOStatusWordIdentifier[] getStatusWordIdsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getStatusWordById", ReplyAction="http://www.itron.com/IContracts/getStatusWordByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOStatusWord getStatusWordById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iStatusWordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getWaveformIdsByMeterId", ReplyAction="http://www.itron.com/IContracts/getWaveformIdsByMeterIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOWaveformIdentifier[] getWaveformIdsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getWaveformById", ReplyAction="http://www.itron.com/IContracts/getWaveformByIdResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOWaveform getWaveformById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iWaveformId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getLogBooks", ReplyAction="http://www.itron.com/IContracts/getLogBooksResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogBook[] getLogBooks(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getLogBooksByType", ReplyAction="http://www.itron.com/IContracts/getLogBooksByTypeResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogBook[] getLogBooksByType(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iType, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getVoltageQualitySummaryByMeterIdType", ReplyAction="http://www.itron.com/IContracts/getVoltageQualitySummaryByMeterIdTypeResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualitySummary getVoltageQualitySummaryByMeterIdType(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQuality p_eDTOEnumVoltageQuality);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getVoltageQualityHistoryByMeterIdType", ReplyAction="http://www.itron.com/IContracts/getVoltageQualityHistoryByMeterIdTypeResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualityHistory[] getVoltageQualityHistoryByMeterIdType(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQuality p_eDTOEnumVoltageQuality, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getVoltageQualityTHDDefectHistoryByMeterIdType", ReplyAction="http://www.itron.com/IContracts/getVoltageQualityTHDDefectHistoryByMeterIdTypeRes" +
            "ponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualityTHDDefectHistory[] getVoltageQualityTHDDefectHistoryByMeterIdType(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQualityTHDDefectHistory p_eDTOEnumVoltageQualityTHD, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getLoadProfileMeasuresSuperMethod", ReplyAction="http://www.itron.com/IContracts/getLoadProfileMeasuresSuperMethodResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeasuresRequest getLoadProfileMeasuresSuperMethod(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iLoadProfileNumber, string p_sChannelQuantity, bool p_bChannelExcessEnergy, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumChannelWorkingMode p_eChannelWorkingMode, System.DateTime p_dStartDate, System.DateTime p_dEndDate, bool p_bDetailedMeasures);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getAbnormalConsumption", ReplyAction="http://www.itron.com/IContracts/getAbnormalConsumptionResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAbnormalConsumption getAbnormalConsumption(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iLoadProfileNumber, string p_sChannelQuantity, System.DateTime p_dStartDate, System.DateTime p_dEndDate, decimal p_iThreshold);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getIsolationVoltage", ReplyAction="http://www.itron.com/IContracts/getIsolationVoltageResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOIsolationVoltage getIsolationVoltage(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, decimal p_dThresholdU, decimal p_dThresholdI, System.DateTime p_dStartDate, System.DateTime p_dEndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getPushLastRatio", ReplyAction="http://www.itron.com/IContracts/getPushLastRatioResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPushLastRatio getPushLastRatio(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.itron.com/IContracts/getLastPush", ReplyAction="http://www.itron.com/IContracts/getLastPushResponse")]
        Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLastPush getLastPush(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContractsChannel : Console_ITRON_SAPHIRv2CIE.SceReference_Itron.IContracts, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractsClient : System.ServiceModel.ClientBase<Console_ITRON_SAPHIRv2CIE.SceReference_Itron.IContracts>, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.IContracts {
        
        public ContractsClient() {
        }
        
        public ContractsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContractsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContractsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPushDecisionHelper getPushDecisionHelper(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getPushDecisionHelper(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer[] getCustomers(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getCustomers(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer getCustomerById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCustomerId) {
            return base.Channel.getCustomerById(ref p_oDTOAuth, p_iCustomerId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer[] getCustomersByName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerName) {
            return base.Channel.getCustomersByName(ref p_oDTOAuth, p_sCustomerName);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer[] getCustomersByAccountNumber(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerAccountNumber) {
            return base.Channel.getCustomersByAccountNumber(ref p_oDTOAuth, p_sCustomerAccountNumber);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomer[] getCustomersByNameFilter(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerName, bool p_bExactSearch) {
            return base.Channel.getCustomersByNameFilter(ref p_oDTOAuth, p_sCustomerName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOObjectCreationReturn addCustomer(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sName, string p_sAccountNumber, string p_sPhoneNumber, string p_sAddress, string p_sEmail, string p_sComments) {
            return base.Channel.addCustomer(ref p_oDTOAuth, p_sName, p_sAccountNumber, p_sPhoneNumber, p_sAddress, p_sEmail, p_sComments);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateCustomerAccountNumber(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCustomerId, string p_sNewAccountNumber) {
            return base.Channel.updateCustomerAccountNumber(ref p_oDTOAuth, p_iCustomerId, p_sNewAccountNumber);
        }
        
        public void checkService() {
            base.Channel.checkService();
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth authenticate(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.authenticate(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMeters(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getMeters(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCustomerId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCustomerId) {
            return base.Channel.getMetersByCustomerId(ref p_oDTOAuth, p_iCustomerId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCustomerName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerName) {
            return base.Channel.getMetersByCustomerName(ref p_oDTOAuth, p_sCustomerName);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCustomerNameFilter(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerName, bool p_bExactSearch) {
            return base.Channel.getMetersByCustomerNameFilter(ref p_oDTOAuth, p_sCustomerName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter getMeterById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId) {
            return base.Channel.getMeterById(ref p_oDTOAuth, p_iMeterId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersBySerialNumber(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sSerialNumber) {
            return base.Channel.getMetersBySerialNumber(ref p_oDTOAuth, p_sSerialNumber);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersBySerialNumberFilter(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sSerialNumber, bool p_bExactSearch) {
            return base.Channel.getMetersBySerialNumberFilter(ref p_oDTOAuth, p_sSerialNumber, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByNetworkPostId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId) {
            return base.Channel.getMetersByNetworkPostId(ref p_oDTOAuth, p_iNetworkPostId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByNetworkPostName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sNetworkPostName, bool p_bExactSearch) {
            return base.Channel.getMetersByNetworkPostName(ref p_oDTOAuth, p_sNetworkPostName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByNetworkDepartureId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkDepartureId) {
            return base.Channel.getMetersByNetworkDepartureId(ref p_oDTOAuth, p_iNetworkDepartureId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByNetworkDepartureName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sNetworkDepartureName, bool p_bExactSearch) {
            return base.Channel.getMetersByNetworkDepartureName(ref p_oDTOAuth, p_sNetworkDepartureName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCityId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCityId) {
            return base.Channel.getMetersByCityId(ref p_oDTOAuth, p_iCityId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByCityName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCityName, bool p_bExactSearch) {
            return base.Channel.getMetersByCityName(ref p_oDTOAuth, p_sCityName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByLocation(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sLocation, bool p_bExactSearch) {
            return base.Channel.getMetersByLocation(ref p_oDTOAuth, p_sLocation, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByConnection(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumConnection p_eConnection) {
            return base.Channel.getMetersByConnection(ref p_oDTOAuth, p_eConnection);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeter[] getMetersByIPMask(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sIPMask) {
            return base.Channel.getMetersByIPMask(ref p_oDTOAuth, p_sIPMask);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOObjectCreationReturn addMeter(
                    ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, 
                    string p_sSerialNumber, 
                    int p_iCustomerId, 
                    string p_sAddress, 
                    string p_sLocation, 
                    Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeter p_oMeterType, 
                    string p_sFirmwareVersion, 
                    string p_sPassword, 
                    Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterConnection p_oConnectionType, 
                    int p_iPortableTerminal, 
                    string p_sIPAddress, 
                    int p_iIpClientPort, 
                    int p_iIpServerPort, 
                    int p_iPhysicalAddress, 
                    int p_iConnectionId, 
                    string p_sMeterDeviceAddress, 
                    string p_sPhoneNumber) {
            return base.Channel.addMeter(ref p_oDTOAuth, p_sSerialNumber, p_iCustomerId, p_sAddress, p_sLocation, p_oMeterType, p_sFirmwareVersion, p_sPassword, p_oConnectionType, p_iPortableTerminal, p_sIPAddress, p_iIpClientPort, p_iIpServerPort, p_iPhysicalAddress, p_iConnectionId, p_sMeterDeviceAddress, p_sPhoneNumber);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterCustomer(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iCustomerId) {
            return base.Channel.updateMeterCustomer(ref p_oDTOAuth, p_iMeterId, p_iCustomerId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterPassword(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, string p_sOldPassword, string p_sNewPassword) {
            return base.Channel.updateMeterPassword(ref p_oDTOAuth, p_iMeterId, p_sOldPassword, p_sNewPassword);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterAddress(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, string p_sNewAddress) {
            return base.Channel.updateMeterAddress(ref p_oDTOAuth, p_iMeterId, p_sNewAddress);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterLocation(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, string p_sNewLocation) {
            return base.Channel.updateMeterLocation(ref p_oDTOAuth, p_iMeterId, p_sNewLocation);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterPortableTerminal(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iNewPortableTerminal) {
            return base.Channel.updateMeterPortableTerminal(ref p_oDTOAuth, p_iMeterId, p_iNewPortableTerminal);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPortableTerminal[] getAllPortableTerminals(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getAllPortableTerminals(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogin getLoginInformation(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getLoginInformation(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogin[] getAllLoginInformation(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getAllLoginInformation(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionTypeCategory getProductionTypeCategoryById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iProductTypeCategoryId) {
            return base.Channel.getProductionTypeCategoryById(ref p_oDTOAuth, p_iProductTypeCategoryId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionTypeCategory[] getProductionTypeCategories(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getProductionTypeCategories(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionType getProductionTypeById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iProductionTypeId) {
            return base.Channel.getProductionTypeById(ref p_oDTOAuth, p_iProductionTypeId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProductionType[] getProductionTypes(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getProductionTypes(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTampering getTamperingByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId) {
            return base.Channel.getTamperingByMeterId(ref p_oDTOAuth, p_iMeterId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingUserConnections[] getTamperingUserConnectionsByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId) {
            return base.Channel.getTamperingUserConnectionsByTamperingId(ref p_oDTOAuth, p_iTamperingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingCoverOpening[] getTamperingCoverOpeningByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId) {
            return base.Channel.getTamperingCoverOpeningByTamperingId(ref p_oDTOAuth, p_iTamperingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingCurrentReversal[] getTamperingCurrentReversalByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId) {
            return base.Channel.getTamperingCurrentReversalByTamperingId(ref p_oDTOAuth, p_iTamperingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingCTVTRatioProgramming[] getTamperingCTVTRatioProgrammingByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId) {
            return base.Channel.getTamperingCTVTRatioProgrammingByTamperingId(ref p_oDTOAuth, p_iTamperingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingSeason[] getTamperingSeasonByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId) {
            return base.Channel.getTamperingSeasonByTamperingId(ref p_oDTOAuth, p_iTamperingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingDayProfile[] getTamperingDayProfileByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId) {
            return base.Channel.getTamperingDayProfileByTamperingId(ref p_oDTOAuth, p_iTamperingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOTamperingIndex[] getTamperingIndexByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId) {
            return base.Channel.getTamperingIndexByTamperingId(ref p_oDTOAuth, p_iTamperingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterHistory[] getTamperingMeterHistoryByTamperingId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTamperingId) {
            return base.Channel.getTamperingMeterHistoryByTamperingId(ref p_oDTOAuth, p_iTamperingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getScheduler(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getScheduler(ref p_oDTOAuth, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getSchedulerByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getSchedulerByMeterId(ref p_oDTOAuth, p_iMeterId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getSchedulerByMeterIds(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int[] p_vMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getSchedulerByMeterIds(ref p_oDTOAuth, p_vMeterId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getSchedulerByMessage(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sTryMessage, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getSchedulerByMessage(ref p_oDTOAuth, p_sTryMessage, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] getSchedulerByTry(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iTry, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getSchedulerByTry(ref p_oDTOAuth, p_iTry, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOScheduler[] setReScheduleTasks(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.setReScheduleTasks(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterStop[] getReportMeterStop(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getReportMeterStop(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportCheckEnergy(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getReportCheckEnergy(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterCheckConfig[] getReportCheckConfig(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getReportCheckConfig(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportTamperingCoverOpening(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getReportTamperingCoverOpening(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportTamperingMagnetSensor(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getReportTamperingMagnetSensor(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportTamperingPhaseCut(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getReportTamperingPhaseCut(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterIdentifier[] getReportMonitor(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getReportMonitor(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerGroup[] getCustomerGroups(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getCustomerGroups(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerGroup getCustomerGroupById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iCustomerGroupId) {
            return base.Channel.getCustomerGroupById(ref p_oDTOAuth, p_iCustomerGroupId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOCustomerGroup[] getCustomerGroupsByName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sCustomerGroupName, bool p_bExactSearch) {
            return base.Channel.getCustomerGroupsByName(ref p_oDTOAuth, p_sCustomerGroupName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterGroup[] getMeterGroups(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getMeterGroups(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterGroup getMeterGroupById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterGroupId) {
            return base.Channel.getMeterGroupById(ref p_oDTOAuth, p_iMeterGroupId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterGroup[] getMeterGroupsByName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sMeterGroupName, bool p_bExactSearch) {
            return base.Channel.getMeterGroupsByName(ref p_oDTOAuth, p_sMeterGroupName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOObjectCreationReturn addMeterGroup(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sGroupName, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeter p_oMeterType, int p_iCustomerId) {
            return base.Channel.addMeterGroup(ref p_oDTOAuth, p_sGroupName, p_oMeterType, p_iCustomerId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode addMeterToMeterGroup(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iMeterGroupId) {
            return base.Channel.addMeterToMeterGroup(ref p_oDTOAuth, p_iMeterId, p_iMeterGroupId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumWebServiceReturnCode updateMeterToMeterGroup(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int[] p_vMeterId, int p_iMeterGroupId, bool p_bResetGroup) {
            return base.Channel.updateMeterToMeterGroup(ref p_oDTOAuth, p_vMeterId, p_iMeterGroupId, p_bResetGroup);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkLevel[] getNetworkLevels(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getNetworkLevels(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkPost getNetworkPostById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId) {
            return base.Channel.getNetworkPostById(ref p_oDTOAuth, p_iNetworkPostId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkPost[] getNetworkPostsByLevel(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkLevel) {
            return base.Channel.getNetworkPostsByLevel(ref p_oDTOAuth, p_iNetworkLevel);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkPost[] getNetworkPostAscendantsById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId, int p_iDepth) {
            return base.Channel.getNetworkPostAscendantsById(ref p_oDTOAuth, p_iNetworkPostId, p_iDepth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkPost[] getNetworkPostDescendantsById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId, int p_iDepth) {
            return base.Channel.getNetworkPostDescendantsById(ref p_oDTOAuth, p_iNetworkPostId, p_iDepth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTONetworkDeparture getNetworkDepartureById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkDepartureId) {
            return base.Channel.getNetworkDepartureById(ref p_oDTOAuth, p_iNetworkDepartureId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummations(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getMeterSummations(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation getMeterSummationById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iSummationId) {
            return base.Channel.getMeterSummationById(ref p_oDTOAuth, p_iSummationId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumMeterSummation p_eMeterSummationType, string p_sSummationName, bool p_bExactSearch) {
            return base.Channel.getMeterSummationsByName(ref p_oDTOAuth, p_eMeterSummationType, p_sSummationName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByCriteriaNetworkPostId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkPostId) {
            return base.Channel.getMeterSummationsByCriteriaNetworkPostId(ref p_oDTOAuth, p_iNetworkPostId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByCriteriaNetworkPostName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sNetworkPostName, bool p_bExactSearch) {
            return base.Channel.getMeterSummationsByCriteriaNetworkPostName(ref p_oDTOAuth, p_sNetworkPostName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByCriteriaNetworkDepartureId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iNetworkDepartureId) {
            return base.Channel.getMeterSummationsByCriteriaNetworkDepartureId(ref p_oDTOAuth, p_iNetworkDepartureId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeterSummation[] getMeterSummationsByCriteriaNetworkDepartureName(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, string p_sNetworkDepartureName, bool p_bExactSearch) {
            return base.Channel.getMeterSummationsByCriteriaNetworkDepartureName(ref p_oDTOAuth, p_sNetworkDepartureName, p_bExactSearch);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProduction[] getProductions(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getProductions(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOProduction getProductionById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iProductionId) {
            return base.Channel.getProductionById(ref p_oDTOAuth, p_iProductionId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLoadProfile[] getLoadProfilesByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId) {
            return base.Channel.getLoadProfilesByMeterId(ref p_oDTOAuth, p_iMeterId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLoadProfileConfig[] getLoadProfileConfigsByLoadProfileId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iLoadProfileId) {
            return base.Channel.getLoadProfileConfigsByLoadProfileId(ref p_oDTOAuth, p_iLoadProfileId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOChannel[] getChannelsFromLoadProfileConfigId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iLoadProfileConfigId) {
            return base.Channel.getChannelsFromLoadProfileConfigId(ref p_oDTOAuth, p_iLoadProfileConfigId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOChannel getChannelById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iChannelId) {
            return base.Channel.getChannelById(ref p_oDTOAuth, p_iChannelId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEvent[] getEventsByLoadProfileConfigId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iLoadProfileConfigId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getEventsByLoadProfileConfigId(ref p_oDTOAuth, p_iLoadProfileConfigId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEvent[] getDetailedEventsByLoadProfileConfigId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iLoadProfileConfigId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getDetailedEventsByLoadProfileConfigId(ref p_oDTOAuth, p_iLoadProfileConfigId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeasure[] getMeasuresByChannelId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iChannelId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getMeasuresByChannelId(ref p_oDTOAuth, p_iChannelId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTODetailedMeasure[] getDetailedMeasuresByChannelId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iChannelId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getDetailedMeasuresByChannelId(ref p_oDTOAuth, p_iChannelId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBillingIdentifier[] getEOBIDs(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getEOBIDs(ref p_oDTOAuth, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBillingIdentifier[] getEOBIDsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getEOBIDsByMeterId(ref p_oDTOAuth, p_iMeterId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling getEOBById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iEndOfBillingId) {
            return base.Channel.getEOBById(ref p_oDTOAuth, p_iEndOfBillingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling getEOBByMeterIdDate(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dDate) {
            return base.Channel.getEOBByMeterIdDate(ref p_oDTOAuth, p_iMeterId, p_dDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling[] getEOBs(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getEOBs(ref p_oDTOAuth, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling[] getEOBsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getEOBsByMeterId(ref p_oDTOAuth, p_iMeterId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEndOfBilling getPersoEOBById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iEndOfBillingId) {
            return base.Channel.getPersoEOBById(ref p_oDTOAuth, p_iEndOfBillingId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOInstantaneousIdentifier[] getInstantaneousIdsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getInstantaneousIdsByMeterId(ref p_oDTOAuth, p_iMeterId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOInstantaneous getInstantaneousById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iInstantaneousId) {
            return base.Channel.getInstantaneousById(ref p_oDTOAuth, p_iInstantaneousId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOInstantaneous getPersoInstantaneousById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iInstantaneousId) {
            return base.Channel.getPersoInstantaneousById(ref p_oDTOAuth, p_iInstantaneousId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOStatusWordIdentifier[] getStatusWordIdsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getStatusWordIdsByMeterId(ref p_oDTOAuth, p_iMeterId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOStatusWord getStatusWordById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iStatusWordId) {
            return base.Channel.getStatusWordById(ref p_oDTOAuth, p_iStatusWordId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOWaveformIdentifier[] getWaveformIdsByMeterId(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getWaveformIdsByMeterId(ref p_oDTOAuth, p_iMeterId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOWaveform getWaveformById(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iWaveformId) {
            return base.Channel.getWaveformById(ref p_oDTOAuth, p_iWaveformId);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogBook[] getLogBooks(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getLogBooks(ref p_oDTOAuth, p_iMeterId, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLogBook[] getLogBooksByType(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iType, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getLogBooksByType(ref p_oDTOAuth, p_iMeterId, p_iType, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualitySummary getVoltageQualitySummaryByMeterIdType(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQuality p_eDTOEnumVoltageQuality) {
            return base.Channel.getVoltageQualitySummaryByMeterIdType(ref p_oDTOAuth, p_iMeterId, p_eDTOEnumVoltageQuality);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualityHistory[] getVoltageQualityHistoryByMeterIdType(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQuality p_eDTOEnumVoltageQuality, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getVoltageQualityHistoryByMeterIdType(ref p_oDTOAuth, p_iMeterId, p_eDTOEnumVoltageQuality, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOVoltageQualityTHDDefectHistory[] getVoltageQualityTHDDefectHistoryByMeterIdType(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumVoltageQualityTHDDefectHistory p_eDTOEnumVoltageQualityTHD, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getVoltageQualityTHDDefectHistoryByMeterIdType(ref p_oDTOAuth, p_iMeterId, p_eDTOEnumVoltageQualityTHD, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOMeasuresRequest getLoadProfileMeasuresSuperMethod(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iLoadProfileNumber, string p_sChannelQuantity, bool p_bChannelExcessEnergy, Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOEnumChannelWorkingMode p_eChannelWorkingMode, System.DateTime p_dStartDate, System.DateTime p_dEndDate, bool p_bDetailedMeasures) {
            return base.Channel.getLoadProfileMeasuresSuperMethod(ref p_oDTOAuth, p_iMeterId, p_iLoadProfileNumber, p_sChannelQuantity, p_bChannelExcessEnergy, p_eChannelWorkingMode, p_dStartDate, p_dEndDate, p_bDetailedMeasures);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAbnormalConsumption getAbnormalConsumption(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, int p_iLoadProfileNumber, string p_sChannelQuantity, System.DateTime p_dStartDate, System.DateTime p_dEndDate, decimal p_iThreshold) {
            return base.Channel.getAbnormalConsumption(ref p_oDTOAuth, p_iMeterId, p_iLoadProfileNumber, p_sChannelQuantity, p_dStartDate, p_dEndDate, p_iThreshold);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOIsolationVoltage getIsolationVoltage(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth, int p_iMeterId, decimal p_dThresholdU, decimal p_dThresholdI, System.DateTime p_dStartDate, System.DateTime p_dEndDate) {
            return base.Channel.getIsolationVoltage(ref p_oDTOAuth, p_iMeterId, p_dThresholdU, p_dThresholdI, p_dStartDate, p_dEndDate);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOPushLastRatio getPushLastRatio(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getPushLastRatio(ref p_oDTOAuth);
        }
        
        public Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOLastPush getLastPush(ref Console_ITRON_SAPHIRv2CIE.SceReference_Itron.DTOAuth p_oDTOAuth) {
            return base.Channel.getLastPush(ref p_oDTOAuth);
        }
    }
}
